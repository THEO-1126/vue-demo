{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nexport default {\n  name: \"Head\",\n  data: function data() {\n    return {\n      userId: JSON.parse(window.localStorage.getItem(\"userId\")),\n      user: JSON.parse(window.localStorage.getItem(\"user\")),\n      roleNameList: []\n    };\n  },\n  methods: {\n    exitBtn: function exitBtn() {\n      this.$router.push({\n        path: \"/login\"\n      });\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"loginToken\");\n      localStorage.removeItem(\"user\");\n    },\n    getUserByUserId: function getUserByUserId() {\n      var _this = this;\n      this.$store.dispatch(\"GetUserByUserId\", this.userId).then(function (res) {\n        var statusCode = res.data.statusCode;\n        if (statusCode == 200) {\n          var user = JSON.parse(localStorage.getItem(\"user\"));\n          user.roleList.forEach(function (item) {\n            _this.roleNameList.push(item.roleName);\n          });\n        }\n      });\n    }\n  },\n  //mounted在页面渲染完成之后使用，也就是此时页面已完全取出Vue中的数据。\n  mounted: function mounted() {\n    var _this2 = this;\n    if (this.userId && !this.user) {\n      this.getUserByUserId();\n    } else {\n      var user = JSON.parse(localStorage.getItem(\"user\"));\n      user.roleList.forEach(function (item) {\n        _this2.roleNameList = [];\n        _this2.roleNameList.push(item.roleName);\n      });\n    }\n  },\n  computed: {\n    test: function test() {\n      return this.$store.state.loginVo.user.nickName;\n    }\n  }\n};","map":{"version":3,"mappings":";;;AAoBA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;QACAC;MACA;MACAC;MACAA;MACAA;IACA;IACAC;MAAA;MACA;QACA;QACA;UACA;UACAN;YACA;UACA;QACA;MACA;IACA;EACA;EAEA;EACAO;IAAA;IACA;MACA;IACA;MACA;MACAP;QACA;QACA;MACA;IACA;EACA;EACAQ;IACAC;MACA;IACA;EACA;AACA","names":["name","data","userId","user","roleNameList","methods","exitBtn","path","localStorage","getUserByUserId","mounted","computed","test"],"sourceRoot":"src/views","sources":["Head.vue"],"sourcesContent":["<template>\r\n  <div id=\"content\">\r\n    <p>{{user.nickName}}</p>\r\n    <el-avatar id=\"avatar\" :size=\"50\" src=\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\"></el-avatar>\r\n    【\r\n    <p v-for=\"roleName in roleNameList\">\r\n        {{ roleName }}\r\n    </p>\r\n    】\r\n    <el-button id=\"exitBtn\"\r\n      type=\"success\"\r\n      @click.native.prevent=\"exitBtn\"\r\n    >退出</el-button>\r\n    <!-- <p>\r\n      test:{{ test }}\r\n    </p> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Head\",\r\n  data() {\r\n    return {\r\n      userId:JSON.parse(window.localStorage.getItem(\"userId\")),\r\n      user:JSON.parse(window.localStorage.getItem(\"user\")),\r\n      roleNameList:[],\r\n    };\r\n  },\r\n  methods:{\r\n    exitBtn(){\r\n      this.$router.push({\r\n          path: \"/login\",\r\n      })\r\n      localStorage.removeItem(\"userId\")\r\n      localStorage.removeItem(\"loginToken\")\r\n      localStorage.removeItem(\"user\")\r\n    },\r\n    getUserByUserId(){\r\n      this.$store.dispatch(\"GetUserByUserId\",this.userId).then(res=>{\r\n         let statusCode=res.data.statusCode\r\n         if(statusCode==200){\r\n          let user=JSON.parse(localStorage.getItem(\"user\"))\r\n          user.roleList.forEach(item => {\r\n              this.roleNameList.push(item.roleName)\r\n          });\r\n         }\r\n      })\r\n    }\r\n  },\r\n\r\n  //mounted在页面渲染完成之后使用，也就是此时页面已完全取出Vue中的数据。\r\n  mounted(){\r\n    if(this.userId && !this.user){\r\n      this.getUserByUserId()\r\n    }else{\r\n      let user=JSON.parse(localStorage.getItem(\"user\"))\r\n      user.roleList.forEach(item => {\r\n        this.roleNameList=[]\r\n        this.roleNameList.push(item.roleName)\r\n      });\r\n    }\r\n  },\r\n  computed:{\r\n    test(){\r\n      return this.$store.state.loginVo.user.nickName\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#content{\r\n  display: flex;\r\n  align-items: center;\r\n  width:100%;\r\n  min-height: 50px;\r\n  justify-content: center;\r\n  /* 设置子元素间距 */\r\n  gap: 10px;\r\n}\r\n#content p{\r\n  font-size: 20px;\r\n  color: aliceblue;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}