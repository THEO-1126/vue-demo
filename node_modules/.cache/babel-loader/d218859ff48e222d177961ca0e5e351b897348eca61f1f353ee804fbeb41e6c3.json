{"ast":null,"code":"import _defineProperty from \"D:/program/LanqiaoVue/vue-demo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _actions;\nimport \"core-js/modules/es.object.to-string.js\";\nimport { getPermissionByUserId } from '@/api/permission'; // 引入获取菜单权限 api 接口\nimport { getUserList, getUserListByPage, deleteUser, getRoleNameList, insertUser } from '@/api/userApi'; // 引入 员工管理接口\nimport { updateUser, getUserListTotalPage, searchUserList, searchUserListTotalPage } from '@/api/userApi'; // 引入 员工管理接口\n\nvar user = {\n  actions: (_actions = {\n    GetPermissionByUserId: function GetPermissionByUserId(_ref, userId) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        getPermissionByUserId(userId).then(function (response) {\n          //使用 permission 接口进行网络请求\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    }\n  }, _defineProperty(_actions, \"GetPermissionByUserId\", function GetPermissionByUserId(_ref2, userId) {\n    var commit = _ref2.commit;\n    return new Promise(function (resolve, reject) {\n      //封装一个 Promise\n      getPermissionByUserId(userId).then(function (response) {\n        //使用 permission 接口进行网络请求\n        resolve(response); //将结果封装进 Promise\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }), _defineProperty(_actions, \"GetUserList\", function GetUserList(_ref3) {\n    var commit = _ref3.commit;\n    return new Promise(function (resolve, reject) {\n      //封装一个 Promise\n      getUserList().then(function (response) {\n        //使用 permission 接口进行网络请求\n        resolve(response); //将结果封装进 Promise\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }), _defineProperty(_actions, \"GetUserListByPage\", function GetUserListByPage(_ref4, tablePage) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve, reject) {\n      //封装一个 Promise\n      getUserListByPage(tablePage).then(function (response) {\n        //使用 permission 接口进行网络请求\n        resolve(response); //将结果封装进 Promise\n      }).catch(function (error) {\n        console.log(\"system.js GetUserListByPage 错误\");\n        reject(error);\n      });\n    });\n  }), _defineProperty(_actions, \"DeleteUser\", function DeleteUser(_ref5, userId) {\n    var commit = _ref5.commit;\n    return new Promise(function (resolve, reject) {\n      //封装一个 Promise\n      deleteUser(userId).then(function (response) {\n        //使用 permission 接口进行网络请求\n        resolve(response); //将结果封装进 Promise\n      }).catch(function (error) {\n        console.log(\"system.js DeleteUser 错误\");\n        reject(error);\n      });\n    });\n  }), _defineProperty(_actions, \"GetRoleNameList\", function GetRoleNameList(_ref6) {\n    var commit = _ref6.commit;\n    return new Promise(function (resolve, reject) {\n      //封装一个 Promise\n      getRoleNameList().then(function (response) {\n        //使用 permission 接口进行网络请求\n        resolve(response); //将结果封装进 Promise\n      }).catch(function (error) {\n        console.log(\"system.js GetRoleNameList 错误\");\n        reject(error);\n      });\n    });\n  }), _defineProperty(_actions, \"InsertUser\", function InsertUser(_ref7, userInfo) {\n    var commit = _ref7.commit;\n    return new Promise(function (resolve, reject) {\n      //封装一个 Promise\n      insertUser(userInfo).then(function (response) {\n        //使用 permission 接口进行网络请求\n        resolve(response); //将结果封装进 Promise\n      }).catch(function (error) {\n        console.log(\"system.js InsertUser 错误\");\n        reject(error);\n      });\n    });\n  }), _defineProperty(_actions, \"UpdateUser\", function UpdateUser(_ref8, userInfo) {\n    var commit = _ref8.commit;\n    return new Promise(function (resolve, reject) {\n      //封装一个 Promise\n      updateUser(userInfo).then(function (response) {\n        //使用 permission 接口进行网络请求\n        resolve(response); //将结果封装进 Promise\n      }).catch(function (error) {\n        console.log(\"system.js UpdateUser 错误\");\n        reject(error);\n      });\n    });\n  }), _defineProperty(_actions, \"GetUserListTotalPage\", function GetUserListTotalPage(_ref9) {\n    var commit = _ref9.commit;\n    return new Promise(function (resolve, reject) {\n      //封装一个 Promise\n      getUserListTotalPage().then(function (response) {\n        //使用 permission 接口进行网络请求\n        resolve(response); //将结果封装进 Promise\n      }).catch(function (error) {\n        console.log(\"system.js GetUserListTotalPage 错误\");\n        reject(error);\n      });\n    });\n  }), _defineProperty(_actions, \"SearchUserList\", function SearchUserList(_ref10, searchInfo) {\n    var commit = _ref10.commit;\n    return new Promise(function (resolve, reject) {\n      //封装一个 Promise\n      searchUserList(searchInfo).then(function (response) {\n        //使用 permission 接口进行网络请求\n        resolve(response); //将结果封装进 Promise\n      }).catch(function (error) {\n        console.log(\"system.js SearchUserList 错误\");\n        reject(error);\n      });\n    });\n  }), _defineProperty(_actions, \"SearchUserListTotalPage\", function SearchUserListTotalPage(_ref11, searchInfo) {\n    var commit = _ref11.commit;\n    return new Promise(function (resolve, reject) {\n      //封装一个 Promise\n      searchUserListTotalPage(searchInfo).then(function (response) {\n        //使用 permission 接口进行网络请求\n        resolve(response); //将结果封装进 Promise\n      }).catch(function (error) {\n        console.log(\"system.js searchUserListTotalPage 错误\");\n        reject(error);\n      });\n    });\n  }), _actions)\n};\nexport default user;","map":{"version":3,"names":["getPermissionByUserId","getUserList","getUserListByPage","deleteUser","getRoleNameList","insertUser","updateUser","getUserListTotalPage","searchUserList","searchUserListTotalPage","user","actions","GetPermissionByUserId","userId","commit","Promise","resolve","reject","then","response","catch","error","tablePage","console","log","userInfo","searchInfo"],"sources":["D:/program/LanqiaoVue/vue-demo/src/store/modules/user.js"],"sourcesContent":["import {getPermissionByUserId} from '@/api/permission' // 引入获取菜单权限 api 接口\r\nimport { getUserList,getUserListByPage,deleteUser,getRoleNameList,insertUser} from '@/api/userApi' // 引入 员工管理接口\r\nimport { updateUser,getUserListTotalPage,searchUserList,searchUserListTotalPage} from '@/api/userApi' // 引入 员工管理接口\r\n\r\nconst user = {\r\n\r\n  actions: {\r\n\r\n    GetPermissionByUserId({commit},userId){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        getPermissionByUserId(userId).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n    \r\n    // 获取菜单权限列表\r\n    GetPermissionByUserId({commit},userId){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        getPermissionByUserId(userId).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 获取员工列表\r\n    GetUserList({commit}){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        getUserList().then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    GetUserListByPage({commit},tablePage){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        getUserListByPage(tablePage).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"system.js GetUserListByPage 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 删除员工\r\n    DeleteUser({commit},userId){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        deleteUser(userId).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"system.js DeleteUser 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 获取角色列表（只获取roleId和roleName）\r\n    GetRoleNameList({commit}){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        getRoleNameList().then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"system.js GetRoleNameList 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    InsertUser({commit},userInfo){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n         insertUser(userInfo).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"system.js InsertUser 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    UpdateUser({commit},userInfo){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n         updateUser(userInfo).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"system.js UpdateUser 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    GetUserListTotalPage({commit}){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        getUserListTotalPage().then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"system.js GetUserListTotalPage 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    SearchUserList({commit},searchInfo){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        searchUserList(searchInfo).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"system.js SearchUserList 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n    \r\n    SearchUserListTotalPage({commit},searchInfo){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        searchUserListTotalPage(searchInfo).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"system.js searchUserListTotalPage 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n  }\r\n}\r\n\r\nexport default user\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}