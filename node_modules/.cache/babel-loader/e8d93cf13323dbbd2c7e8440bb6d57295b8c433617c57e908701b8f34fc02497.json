{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/* \r\n  路由管理 \r\n    添加了登入拦截  未登入则无法跳转到主页\r\n*/\nimport Vue from 'vue'; //引入 Vue\nimport Router from 'vue-router'; //引入 Vue 路由\nimport Main from \"@/views/Main\";\nimport Home from \"@/views/Home\";\nimport { VXETable } from 'vxe-table';\nVue.use(Router);\nvar router = new Router({\n  mode: 'history',\n  // 去除路由中的 # 号\n\n  routes: [\n  // 用于测试\n  {\n    path: '/index',\n    component: function component() {\n      return import('@/views/index');\n    }\n  },\n  //配置默认的路径，默认显示登录页\n  {\n    path: '/',\n    redirect: '/login',\n    component: function component() {\n      return import('@/views/Login');\n    },\n    children: [{\n      path: \"/login\",\n      name: '登录',\n      component: function component() {\n        return import('@/views/Login');\n      }\n    }]\n  },\n  //配置登录成功页面，使用时需要使用 path 路径来实现跳转\n  {\n    path: '/',\n    component: Main,\n    // redirect:'/home',\n    children: [\n    // 一级菜单且无子菜单 menu.type=1\n    {\n      path: '/dashboard',\n      name: '首页',\n      // 静态加载组件\n      component: Home\n    }, {\n      path: '/customerList',\n      name: '客户管理',\n      component: function component() {\n        return import('../views/firstMenu/customerList');\n      }\n    }, {\n      path: '/purchaseContract',\n      name: '采购单',\n      component: function component() {\n        return import('../views/firstMenu/purchaseContract');\n      }\n    }, {\n      path: '/processContract',\n      name: '加工单',\n      component: function component() {\n        return import('../views/firstMenu/processContract');\n      }\n    }, {\n      path: '/warehouseManagement',\n      name: '仓库管理',\n      component: function component() {\n        return import('../views/firstMenu/warehouseManagement');\n      }\n    }, {\n      path: '/ownCompanyList',\n      name: '公司管理',\n      component: function component() {\n        return import('../views/firstMenu/ownCompanyList');\n      }\n    }, {\n      path: '/saleContract',\n      name: '销售单',\n      component: function component() {\n        return import('../views/firstMenu/saleContract');\n      }\n    }, {\n      path: '/purchasePaymentContract',\n      name: '采购付款单',\n      component: function component() {\n        return import('../views/firstMenu/purchasePaymentContract');\n      }\n    }, {\n      path: '/processPaymentContract',\n      name: '加工付款单',\n      component: function component() {\n        return import('../views/firstMenu/processPaymentContract');\n      }\n    }, {\n      path: '/logisticsPaymentContract',\n      name: '物流付款单',\n      component: function component() {\n        return import('../views/firstMenu/logisticsPaymentContract');\n      }\n    },\n    // 二级菜单 menu.type=1\n\n    // 出纳的子菜单\n    {\n      path: '/cashier/cashierPurchasePayment',\n      name: '采购付款单',\n      // 动态加载组件:只有在需要时才加载\n      component: function component() {\n        return import('../views/cashier/cashierPurchasePayment');\n      }\n    }, {\n      path: '/cashier/cashierProcessPayment',\n      name: '加工付款单',\n      component: function component() {\n        return import('../views/cashier/cashierProcessPayment');\n      }\n    }, {\n      path: '/cashier/cashierSale',\n      name: '出纳销售单',\n      component: function component() {\n        return import('../views/cashier/cashierSale');\n      }\n    }, {\n      path: '/cashier/cashierLogisticsPayment',\n      name: '物流付款单',\n      component: function component() {\n        return import('../views/cashier/cashierLogisticsPayment');\n      }\n    }, {\n      path: '/cashier/cashierShipping',\n      name: '出纳海运单',\n      component: function component() {\n        return import('../views/cashier/cashierShipping');\n      }\n    }, {\n      path: '/cashier/cashierOfficeExpense',\n      name: '办公经费',\n      component: function component() {\n        return import('../views/cashier/cashierOfficeExpense');\n      }\n    },\n    // 系统管理 的子菜单\n    {\n      path: '/userList',\n      name: '员工管理',\n      component: function component() {\n        return import('../views/system/userList');\n      }\n    }, {\n      path: '/roleList',\n      name: '角色管理',\n      component: function component() {\n        return import('../views/system/roleList');\n      }\n    }, {\n      path: '/menuList',\n      name: '菜单管理',\n      component: function component() {\n        return import('../views/system/menuList');\n      }\n    }, {\n      path: 'logList',\n      name: '日志管理',\n      component: function component() {\n        return import('../views/system/logList');\n      }\n    },\n    // 出库信息 的子菜单\n    {\n      path: '/outbound/outboundLogisticsList',\n      name: '出库物流单',\n      component: function component() {\n        return import('../views/outbound/outboundLogisticsList');\n      }\n    }, {\n      path: '/outbound/outboundShippingList',\n      name: '出库海运单',\n      component: function component() {\n        return import('../views/outbound/outboundShippingList');\n      }\n    },\n    // 财务管理的子菜单\n\n    {\n      path: '/finance/reportAnalysis',\n      name: '报表分析',\n      component: function component() {\n        return import('../views/finance/reportAnalysis');\n      }\n    }, {\n      path: '/finance/officeExpense',\n      name: '办公经费',\n      component: function component() {\n        return import('../views/finance/officeExpense');\n      }\n    }, {\n      path: '/finance/priceTrend',\n      name: '单价走势',\n      component: function component() {\n        return import('../views/finance/priceTrend');\n      }\n    }]\n  }\n\n  //配置登录成功页面，使用时需要使用 path 路径来实现跳转\n  // { path: '/success', component: () => import('@/views/success')},\n\n  //配置登录失败页面，使用时需要使用 path 路径来实现跳转\n  // { path: '/error', component: () => import('@/views/error'), hidden: true }\n  ]\n});\n\n// 导航守卫\n// 参数1 : to 目标路由对象\n// 参数2 : from 来源路由对象\n// 参数3 : next() 下一步\nrouter.beforeEach(function (to, from, next) {\n  // 1. 判断是不是登录页面\n  // 是登录页面\n  if (to.path === '/login') {\n    next();\n  } else {\n    // 不是登录页面\n    // 2. 判断 是否登录过\n    var loginToken = localStorage.getItem('loginToken');\n    loginToken ? next() : next('/login');\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","Router","Main","Home","VXETable","use","router","mode","routes","path","component","redirect","children","name","beforeEach","to","from","next","loginToken","localStorage","getItem"],"sources":["D:/program/LanqiaoVue/vue-demo/src/router/index.js"],"sourcesContent":["/* \r\n  路由管理 \r\n    添加了登入拦截  未登入则无法跳转到主页\r\n*/\r\nimport Vue from 'vue' //引入 Vue\r\nimport Router from 'vue-router' //引入 Vue 路由\r\nimport Main from \"@/views/Main\";\r\nimport Home from \"@/views/Home\";\r\nimport { VXETable } from 'vxe-table'\r\n\r\nVue.use(Router)\r\n\r\nconst router = new Router({\r\n    mode: 'history',   // 去除路由中的 # 号\r\n\r\n    routes:[\r\n        // 用于测试\r\n        {\r\n            path:'/index',\r\n            component:()=>import('@/views/index')\r\n        },\r\n    \r\n        //配置默认的路径，默认显示登录页\r\n        {\r\n            path: '/',\r\n            redirect:'/login',\r\n            component: () => import('@/views/Login'),\r\n            children:[{\r\n                path:\"/login\",\r\n                name:'登录',\r\n                component: () => import('@/views/Login')\r\n            }]\r\n        },\r\n        //配置登录成功页面，使用时需要使用 path 路径来实现跳转\r\n        {\r\n            path:'/',\r\n            component: Main,\r\n            // redirect:'/home',\r\n            children: [\r\n    \r\n                // 一级菜单且无子菜单 menu.type=1\r\n                {\r\n                    path: '/dashboard',\r\n                    name: '首页',\r\n                    // 静态加载组件\r\n                    component: Home\r\n                },\r\n                {\r\n                    path: '/customerList',\r\n                    name: '客户管理',\r\n                    component: () => import('../views/firstMenu/customerList')\r\n                },\r\n                {\r\n                    path: '/purchaseContract',\r\n                    name: '采购单',\r\n                    component: () => import('../views/firstMenu/purchaseContract')\r\n                },\r\n                {\r\n                    path: '/processContract',\r\n                    name: '加工单',\r\n                    component: () => import('../views/firstMenu/processContract')\r\n                },\r\n                {\r\n                    path: '/warehouseManagement',\r\n                    name: '仓库管理',\r\n                    component: () => import('../views/firstMenu/warehouseManagement')\r\n                },\r\n                {\r\n                    path: '/ownCompanyList',\r\n                    name: '公司管理',\r\n                    component: () => import('../views/firstMenu/ownCompanyList')\r\n                },\r\n                {\r\n                    path: '/saleContract',\r\n                    name: '销售单',\r\n                    component: () => import('../views/firstMenu/saleContract')\r\n                },\r\n                {\r\n                    path: '/purchasePaymentContract',\r\n                    name: '采购付款单',\r\n                    component: () => import('../views/firstMenu/purchasePaymentContract')\r\n                },\r\n                {\r\n                    path: '/processPaymentContract',\r\n                    name: '加工付款单',\r\n                    component: () => import('../views/firstMenu/processPaymentContract')\r\n                },\r\n                {\r\n                    path: '/logisticsPaymentContract',\r\n                    name: '物流付款单',\r\n                    component: () => import('../views/firstMenu/logisticsPaymentContract')\r\n                },\r\n    \r\n    \r\n    \r\n                // 二级菜单 menu.type=1\r\n    \r\n                // 出纳的子菜单\r\n                {\r\n                    path: '/cashier/cashierPurchasePayment',\r\n                    name: '采购付款单',\r\n                    // 动态加载组件:只有在需要时才加载\r\n                    component: () => import('../views/cashier/cashierPurchasePayment')\r\n                },\r\n                {\r\n                    path: '/cashier/cashierProcessPayment',\r\n                    name: '加工付款单',\r\n                    component: () => import('../views/cashier/cashierProcessPayment')\r\n                },\r\n                {\r\n                    path: '/cashier/cashierSale',\r\n                    name: '出纳销售单',\r\n                    component: () => import('../views/cashier/cashierSale')\r\n                },\r\n                {\r\n                    path: '/cashier/cashierLogisticsPayment',\r\n                    name: '物流付款单',\r\n                    component: () => import('../views/cashier/cashierLogisticsPayment')\r\n                },\r\n                {\r\n                    path: '/cashier/cashierShipping',\r\n                    name: '出纳海运单',\r\n                    component: () => import('../views/cashier/cashierShipping')\r\n                },\r\n                {\r\n                    path: '/cashier/cashierOfficeExpense',\r\n                    name: '办公经费',\r\n                    component: () => import('../views/cashier/cashierOfficeExpense')\r\n                },\r\n    \r\n                // 系统管理 的子菜单\r\n                {\r\n                    path: '/userList',\r\n                    name: '员工管理',\r\n                    component: () => import('../views/system/userList')\r\n                },\r\n                {\r\n                    path: '/roleList',\r\n                    name: '角色管理',\r\n                    component: () => import('../views/system/roleList')\r\n                },\r\n                {\r\n                    path: '/menuList',\r\n                    name: '菜单管理',\r\n                    component: () => import('../views/system/menuList')\r\n                },\r\n                {\r\n                    path: 'logList',\r\n                    name: '日志管理',\r\n                    component: () => import('../views/system/logList')\r\n                },\r\n    \r\n                // 出库信息 的子菜单\r\n                {\r\n                    path: '/outbound/outboundLogisticsList',\r\n                    name: '出库物流单',\r\n                    component: () => import('../views/outbound/outboundLogisticsList')\r\n                },\r\n                {\r\n                    path: '/outbound/outboundShippingList',\r\n                    name: '出库海运单',\r\n                    component: () => import('../views/outbound/outboundShippingList')\r\n                },\r\n    \r\n    \r\n                // 财务管理的子菜单\r\n    \r\n                {\r\n                    path: '/finance/reportAnalysis',\r\n                    name: '报表分析',\r\n                    component: () => import('../views/finance/reportAnalysis')\r\n                },\r\n                {\r\n                    path: '/finance/officeExpense',\r\n                    name: '办公经费',\r\n                    component: () => import('../views/finance/officeExpense')\r\n                },\r\n                {\r\n                    path: '/finance/priceTrend',\r\n                    name: '单价走势',\r\n                    component: () => import('../views/finance/priceTrend')\r\n                }\r\n            ]\r\n        },\r\n    \r\n    \r\n    \r\n        //配置登录成功页面，使用时需要使用 path 路径来实现跳转\r\n        // { path: '/success', component: () => import('@/views/success')},\r\n    \r\n        //配置登录失败页面，使用时需要使用 path 路径来实现跳转\r\n        // { path: '/error', component: () => import('@/views/error'), hidden: true }\r\n    ]\r\n})\r\n\r\n// 导航守卫\r\n// 参数1 : to 目标路由对象\r\n// 参数2 : from 来源路由对象\r\n// 参数3 : next() 下一步\r\nrouter.beforeEach((to, from, next) => {\r\n    // 1. 判断是不是登录页面\r\n    // 是登录页面\r\n    if(to.path === '/login') {\r\n      next()\r\n    } else {\r\n      // 不是登录页面\r\n      // 2. 判断 是否登录过\r\n      let loginToken = localStorage.getItem('loginToken')     \r\n      loginToken ? next() : next('/login')\r\n    }\r\n  })\r\n\r\nexport default router\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}