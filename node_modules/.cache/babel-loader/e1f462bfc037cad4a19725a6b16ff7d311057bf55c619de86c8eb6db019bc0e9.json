{"ast":null,"code":"import _regeneratorRuntime from \"D:/program/LanqiaoVue/vue-demo/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/program/LanqiaoVue/vue-demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport { timeFormat } from '../../utils/dateUtil'; // 日期格式化\nimport { VXETable } from 'vxe-table';\nimport console from 'console';\nexport default {\n  name: \"ownCompanyList\",\n  data: function data() {\n    return {\n      checkRowKeys: [],\n      // 默认选中的分配权限\n      showMenu: false,\n      menulist: [],\n      searchFlag: false,\n      // 搜索标志\n      username: JSON.parse(window.localStorage.getItem(\"user\")).data.username,\n      tableLoading: false,\n      submitLoading: false,\n      tablePage: {\n        currentPage: 1,\n        pageSize: 10,\n        pageSizes: [10, 20, 50, 100],\n        total: 0\n      },\n      filter: {\n        name: ''\n      },\n      searchInfo: {\n        name: '',\n        currentPage: '',\n        pageSize: ''\n      },\n      data: {\n        list: [],\n        // 用于在界面显示的数据\n        tableData: [],\n        // 存放真正的数据\n        tableTotal: 0,\n        searchTotal: 0\n        // listCopy:[], // 用于查询前后存放的假数据\n      },\n\n      showEdit: false,\n      selectRow: null,\n      editCompany: false,\n      formRules: {\n        roleName: [{\n          required: true,\n          message: '请输入角色名称'\n        }]\n      },\n      formData: {\n        // 弹出的表单数据\n        roleId: '',\n        roleName: '',\n        remark: ''\n      }\n    };\n  },\n  methods: {\n    // 选择 的 分配权限\n    selectChangeEvent: function selectChangeEvent(_ref) {\n      var $table = _ref.$table;\n      var records = $table.getCheckboxRecords();\n      console.info(\"\\u52FE\\u9009\".concat(records.length, \"\\u4E2A\\u6811\\u5F62\\u8282\\u70B9\"), records);\n    },\n    //  取消按钮\n    cancel: function cancel() {\n      this.showEdit = false;\n    },\n    insertEvent: function insertEvent() {\n      this.showEdit = true, this.selectRow = null;\n      this.formData = {\n        roleId: '',\n        roleName: '',\n        remark: ''\n      };\n    },\n    editEvent: function editEvent(row) {\n      this.selectRow = row;\n      this.showEdit = true;\n      this.formData = {\n        roleId: row.roleId,\n        roleName: row.roleName,\n        remark: row.remark\n      };\n    },\n    showMenuBtn: function showMenuBtn(row) {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              row.menu.forEach(function (item) {\n                _this.checkRowKeys.push(item.id);\n              });\n              _this.showMenu = true;\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    getAllMenu: function getAllMenu() {\n      var _this2 = this;\n      this.tableLoading = true;\n      this.$store.dispatch(\"GetAllMenu\").then(function (res) {\n        console.log(res);\n        var statusCode = res.data.statusCode;\n        if (statusCode == 200) {\n          _this2.menuList = res.data.data;\n          _this2.tableLoading = false;\n        } else {\n          _this2.tableLoading = false;\n          VXETable.modal.message({\n            content: '加载失败',\n            status: 'error'\n          });\n        }\n      }).catch(function (err) {\n        _this2.tableLoading = false;\n        VXETable.modal.message({\n          content: '加载失败',\n          status: 'error'\n        });\n      });\n    },\n    getRoleList: function getRoleList() {\n      var _this3 = this;\n      this.$store.dispatch('GetRoleList').then(function (res) {\n        var statusCode = res.data.statusCode;\n        if (statusCode == 200) {\n          console.log(res);\n          _this3.data.tableTotal = res.data.data.length;\n          _this3.tablePage.total = _this3.data.tableTotal;\n          _this3.data.tableData = res.data.data;\n          _this3.data.list = _this3.data.tableData;\n          _this3.tableLoading = false;\n        }\n      }).catch(function (err) {\n        console.log(err);\n        _this3.$message({\n          showClose: true,\n          message: '无权访问！',\n          type: 'error'\n        });\n      });\n    },\n    resetEvent: function resetEvent() {\n      if (this.searchFlag) {\n        this.searchFlag = false;\n        this.filter.name = '', this.getRoleList();\n        this.tablePage.total = this.data.tableTotal;\n      }\n    },\n    searchRoleByName: function searchRoleByName() {\n      var _this4 = this;\n      this.$store.dispatch(\"SearchRoleByName\", roleName).then(function (res) {\n        var statusCode = res.data.statusCode;\n        if (statusCode == 200) {\n          _this4.data.list = res.data.data;\n          _this4.tableLoading = false;\n        } else {\n          console.log(\"错误\");\n        }\n      }).catch(function (err) {\n        console.log(err);\n        _this4.$message({\n          showClose: true,\n          message: '无权访问！',\n          type: 'error'\n        });\n      });\n    },\n    // 搜索事件\n    searchEvent: function searchEvent() {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var roleName;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              roleName = _this5.$XEUtils.toValueString(_this5.filter.name).trim().toLowerCase();\n              if (!roleName) {\n                _context2.next = 6;\n                break;\n              }\n              _this5.searchFlag = true;\n              _this5.searchInfo.name = roleName;\n              // this.searchInfo.currentPage=this.tablePage.currentPage\n              // this.searchInfo.pageSize=this.tablePage.pageSize\n              _context2.next = 6;\n              return _this5.searchRoleByName(roleName);\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    insertRole: function insertRole(roleInfo) {\n      var _this6 = this;\n      this.$store.dispatch(\"InsertRole\", roleInfo).then(function (res) {\n        console.log(roleInfo);\n        var statusCode = res.data.statusCode;\n        if (statusCode == 200) {\n          _this6.submitLoading = false;\n          VXETable.modal.message({\n            content: '新增成功',\n            status: 'success'\n          });\n          _this6.getRoleList();\n          _this6.showEdit = false;\n          _this6.data.tableTotal = _this6.data.tableTotal + 1;\n          _this6.tablePage.total = _this6.data.tableTotal;\n        } else {\n          _this6.submitLoading = false;\n          _this6.showEdit = true;\n          VXETable.modal.message({\n            content: '新增错误',\n            status: 'error'\n          });\n        }\n      }).catch(function (err) {\n        _this6.submitLoading = false;\n        _this6.showEdit = true;\n        console.log(\"错误\" + err);\n        VXETable.modal.message({\n          content: '新增错误',\n          status: 'error'\n        });\n      });\n    },\n    updateRole: function updateRole(roleInfo) {\n      var _this7 = this;\n      this.$store.dispatch(\"UpdateRole\", roleInfo).then(function (res) {\n        var statusCode = res.data.statusCode;\n        if (statusCode == 200) {\n          _this7.submitLoading = false;\n          VXETable.modal.message({\n            content: '更新成功',\n            status: 'success'\n          });\n          _this7.getRoleList();\n          _this7.showEdit = false;\n        } else {\n          _this7.submitLoading = false;\n          _this7.showEdit = true;\n          VXETable.modal.message({\n            content: '更新错误',\n            status: 'error'\n          });\n        }\n      }).catch(function (err) {\n        _this7.submitLoading = false;\n        _this7.showEdit = true;\n        VXETable.modal.message({\n          content: '更新错误',\n          status: 'error'\n        });\n      });\n    },\n    //  提交\n    submitEvent: function submitEvent() {\n      var submitFormData = {};\n      for (var item in this.formData) {\n        if (this.formData[item]) submitFormData[item] = this.formData[item];\n      }\n      if (this.selectRow) {\n        submitFormData[\"updateBy\"] = this.username;\n        this.updateRole(submitFormData);\n      }\n      if (!this.selectRow) {\n        submitFormData[\"createBy\"] = this.username;\n        this.insertRole(submitFormData);\n      }\n    },\n    // 删除  async 和 await来实现同步和异步\n    removeEvent: function removeEvent(row) {\n      var _this8 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var type, roleId;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(row.roleId);\n              _context3.next = 3;\n              return VXETable.modal.confirm('您确定要删除该数据?');\n            case 3:\n              type = _context3.sent;\n              if (!(type === 'confirm')) {\n                _context3.next = 8;\n                break;\n              }\n              roleId = row.roleId;\n              _context3.next = 8;\n              return _this8.deleteRoleById(roleId);\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    // 删除员工\n    deleteRoleById: function deleteRoleById(roleId) {\n      var _this9 = this;\n      this.$store.dispatch('DeleteRoleById', roleId).then(function (res) {\n        var statusCode = res.data.statusCode;\n        if (statusCode == 200) {\n          VXETable.modal.message({\n            content: '删除成功',\n            status: 'success'\n          });\n          _this9.data.tableTotal = _this9.data.tableTotal - 1;\n          _this9.tablePage.total = _this9.data.tableTotal;\n          _this9.getRoleList();\n        } else {\n          VXETable.modal.message({\n            content: '删除失败',\n            status: 'error'\n          });\n        }\n      });\n    },\n    // 分页组件触发 \n    handlePageChange: function handlePageChange(_ref2) {\n      var currentPage = _ref2.currentPage,\n        pageSize = _ref2.pageSize;\n      this.tablePage.currentPage = currentPage;\n      this.tablePage.pageSize = pageSize;\n      if (this.searchFlag) {\n        this.searchEvent();\n      } else {\n        this.getCompanyListByPage();\n      }\n    }\n  },\n  created: function created() {\n    var _this10 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _this10.getRoleList();\n          case 2:\n            _context4.next = 4;\n            return _this10.getAllMenu();\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }))();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;AAsGA;AACA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MAAA;MACAC;MACAC;MACAC;MAAA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAd;MACA;MACAe;QACAf;QACAU;QACAC;MACA;MACAV;QACAe;QAAA;QACAC;QAAA;QACAC;QACAC;QACA;MACA;;MACAC;MACAC;MACAC;MACAC;QACAC,WACA;UAAAC;UAAAC;QAAA;MAEA;MACAC;QAAA;QACAC;QACAJ;QACAK;MACA;IACA;EACA;EAEAC;IAEA;IACAC;MAAA;MACA;MACAC;IACA;IACA;IACAC;MACA;IACA;IACAC;MACA,sBACA;MACA;QACAN;QACAJ;QACAK;MACA;IACA;IACAM;MACA;MACA;MACA;QACAP;QACAJ;QACAK;MACA;IACA;IACAO;MAAA;MAAA;QAAA;UAAA;YAAA;cACAC;gBACA;cACA;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAC;MAAA;MACA;MACA;QACAN;QACA;QACA;UACA;UACA;QACA;UACA;UACAO;YAAAC;YAAAC;UAAA;QACA;MACA;QACA;QACAF;UAAAC;UAAAC;QAAA;MACA;IACA;IACAC;MAAA;MACA;QACA;QACA;UACAV;UACA;UACA;UACA;UACA;UACA;QACA;MAEA;QACAA;QACA;UACAW;UACAjB;UACAkB;QACA;MACA;IACA;IAEAC;MACA;QACA;QACA,uBACA;QACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA;UACA;UACA;QACA;UACAd;QACA;MACA;QACAA;QACA;UACAW;UACAjB;UACAkB;QACA;MACA;IACA;IAEA;IACAG;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cACAvB;cAAA,KACAA;gBAAA;gBAAA;cAAA;cACA;cACA;cACA;cACA;cAAA;cAAA,OACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAEA;IAEAwB;MAAA;MACA;QACAhB;QACA;QACA;UACA;UACAO;YAAAC;YAAAC;UAAA;UACA;UACA;UACA;UACA;QACA;UACA;UACA;UACAF;YAAAC;YAAAC;UAAA;QACA;MACA;QACA;QACA;QACAT;QACAO;UAAAC;UAAAC;QAAA;MACA;IACA;IACAQ;MAAA;MACA;QACA;QACA;UACA;UACAV;YAAAC;YAAAC;UAAA;UACA;UACA;QACA;UACA;UACA;UACAF;YAAAC;YAAAC;UAAA;QACA;MACA;QACA;QACA;QACAF;UAAAC;UAAAC;QAAA;MACA;IACA;IACA;IACAS;MACA;MACA;QACA,yBACAC;MACA;MACA;QACAA;QACA;MACA;MACA;QACAA;QACA;MACA;IACA;IAEA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cACApB;cAAA;cAAA,OACAO;YAAA;cAAAK;cAAA,MACAA;gBAAA;gBAAA;cAAA;cACAhB;cAAA;cAAA,OACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAGA;IACA;IACAyB;MAAA;MACA;QACA;QACA;UACAd;YAAAC;YAAAC;UAAA;UACA;UACA;UACA;QACA;UACAF;YAAAC;YAAAC;UAAA;QACA;MACA;IACA;IAEA;IACAa;MAAA;QAAA3C;MACA;MACA;MACA;QACA;MACA;QACA;MACA;IACA;EACA;EAEA4C;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACA;UAAA;YAAA;YAAA,OACA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EACA;AACA","names":["name","data","checkRowKeys","showMenu","menulist","searchFlag","username","tableLoading","submitLoading","tablePage","currentPage","pageSize","pageSizes","total","filter","searchInfo","list","tableData","tableTotal","searchTotal","showEdit","selectRow","editCompany","formRules","roleName","required","message","formData","roleId","remark","methods","selectChangeEvent","console","cancel","insertEvent","editEvent","showMenuBtn","row","getAllMenu","VXETable","content","status","getRoleList","showClose","type","resetEvent","searchRoleByName","searchEvent","insertRole","updateRole","submitEvent","submitFormData","removeEvent","deleteRoleById","handlePageChange","created"],"sourceRoot":"src/views/system","sources":["roleList.vue"],"sourcesContent":["<template>\r\n  <div id=\"view\">\r\n    <div id=\"box\">\r\n      <vxe-toolbar>\r\n          <template #buttons>\r\n            <vxe-input v-model=\"filter.name\"  placeholder=\"输入角色名称\" @keyup.enter.native=\"searchEvent()\"></vxe-input>\r\n            <vxe-button  status=\"primary\" content=\"查询\" @click=\"searchEvent()\"></vxe-button>\r\n            <vxe-button  content=\"返回全部数据\" status=\"danger\"  @click=\"resetEvent()\" :disabled=\"!searchFlag\"></vxe-button>\r\n            <vxe-button status=\"primary\" icon=\"vxe-icon-square-plus\" @click=\"insertEvent()\">新增</vxe-button>\r\n          </template>\r\n        </vxe-toolbar>\r\n        <vxe-table :data=\"data.list\" class=\"table\"\r\n            border\r\n            ref=\"userTable\"\r\n            height=\"80%\"\r\n            :row-config=\"{isHover: true}\"\r\n            :loading=\"tableLoading\">\r\n            <vxe-column type=\"seq\" width=\"90\"></vxe-column>\r\n            <vxe-column field=\"roleName\" title=\"角色名称\" width=\"350\" type=\"html\"></vxe-column>\r\n            <vxe-column field=\"remark\" title=\"角色描述\" width=\"350\"></vxe-column>\r\n            <vxe-column title=\"操作\" width=\"400\" show-overflow>\r\n            <template #default=\"{ row}\">\r\n              <vxe-button status=\"primary\" icon=\"vxe-icon-edit\" @click=\"editEvent(row)\">编辑</vxe-button>\r\n              <vxe-button status=\"primary\" icon=\"vxe-icon-edit\" @click=\"showMenuBtn(row)\">修改权限</vxe-button>\r\n              <vxe-button status=\"danger\" icon=\"vxe-icon-delete\" @click=\"removeEvent(row)\">删除</vxe-button>\r\n            </template>\r\n          </vxe-column>\r\n            <template #empty>\r\n            <span style=\"color: red;\">\r\n              <img src=\"https://n.sinaimg.cn/sinacn17/w240h240/20180314/89fc-fyscsmv5911424.gif\">\r\n              <p>没有更多数据了！</p>\r\n            </span>\r\n          </template>\r\n      </vxe-table>\r\n\r\n      <!-- 弹出的新增或编辑表单 -->\r\n      <vxe-modal v-model=\"showEdit\" :title=\"selectRow ? '编辑&保存' : '新增&保存'\" width=\"500\" \r\n            min-width=\"400\" min-height=\"300\" :loading=\"submitLoading\" resize destroy-on-close>\r\n          <template #default>\r\n            <vxe-form :data=\"formData\" :rules=\"formRules\" title-align=\"center\" title-width=\"100\" @submit=\"submitEvent\">\r\n              <vxe-form-item field=\"roleName\" title=\"角色名称\" :span=\"24\" :item-render=\"{}\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-input v-model=\"data.roleName\" placeholder=\"请输入角色名称\" ></vxe-input>\r\n                </template>\r\n              </vxe-form-item>\r\n              <vxe-form-item  field=\"remark\" title=\"备注\" :span=\"24\" :item-render=\"{}\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-input v-model=\"data.remark\"  placeholder=\"请输入备注\"></vxe-input>\r\n                </template>\r\n              </vxe-form-item>\r\n\r\n              <vxe-form-item align=\"center\" title-align=\"left\" :span=\"24\">\r\n                <template #default>\r\n                  <vxe-button  status=\"primary\" type=\"submit\">提交</vxe-button>\r\n                  <vxe-button  @click=\"cancel\">取消</vxe-button>\r\n                </template>\r\n              </vxe-form-item>\r\n            </vxe-form>\r\n          </template>\r\n        </vxe-modal>\r\n\r\n      <!-- 分配权限 -->\r\n      <vxe-modal v-model=\"showMenu\" title=\"分配权限\" width=\"400\" \r\n            min-width=\"300\" min-height=\"300\" height=\"680\" destroy-on-close>\r\n        <template #default>\r\n          <vxe-table class=\"table\"\r\n          border=\"inner\"\r\n          height=\"550\"\r\n          ref=\"parentMenu\"\r\n          :row-config=\"{isHover: true, isCurrent: true,trigger:'row',keyField: 'id'}\"\r\n          :tree-config=\"{transform: true, rowField: 'id', trigger:'row',parentField: 'parentId',expandAll:true}\"\r\n          :checkbox-config=\"{labelField: 'name',checkRowKeys: checkRowKeys }\"\r\n          @checkbox-change=\"selectChangeEvent\"\r\n          :data=\"menuList\"\r\n          >\r\n            <vxe-column type=\"checkbox\" title=\"分配权限\" field=\"name\" tree-node>\r\n              <template #default=\"{row}\">\r\n                <span> {{ row.name }}</span>\r\n              </template> \r\n            </vxe-column>\r\n          </vxe-table>\r\n          <template>\r\n            <vxe-button status=\"primary\" style=\"margin-top: 20px\" @click=\"submitEvent()\">提交</vxe-button>\r\n            <vxe-button  @click=\"cancel\">取消</vxe-button>\r\n          </template>\r\n        </template>\r\n      </vxe-modal>\r\n\r\n      <vxe-pager\r\n        :loading=\"tableLoading\"\r\n        :current-page=\"tablePage.currentPage\"\r\n        :page-size=\"tablePage.pageSize\"\r\n        :page-sizes= \"tablePage.pageSizes\"\r\n        :total=\"tablePage.total\"\r\n        :layouts=\"['PrevPage', 'JumpNumber', 'NextPage', 'FullJump', 'Sizes', 'Total']\"\r\n        @page-change=\"handlePageChange\">\r\n      </vxe-pager>\r\n\r\n  </div>\r\n</div>\r\n</template>\r\n<script>\r\nimport {timeFormat} from '../../utils/dateUtil'  // 日期格式化\r\nimport { VXETable } from 'vxe-table'\r\nimport console from 'console'\r\n\r\nexport default { \r\n  name:\"ownCompanyList\",\r\n  data() {\r\n    return {\r\n      checkRowKeys:[],  // 默认选中的分配权限\r\n      showMenu:false,\r\n      menulist:[],\r\n      searchFlag:false, // 搜索标志\r\n      username: JSON.parse(window.localStorage.getItem(\"user\")).data.username,\r\n      tableLoading: false,\r\n      submitLoading: false,\r\n      tablePage: {\r\n        currentPage: 1,\r\n        pageSize: 10,\r\n        pageSizes:[10,20,50,100],\r\n        total: 0\r\n      },\r\n      filter:{\r\n        name:''\r\n      },\r\n      searchInfo:{\r\n        name:'',\r\n        currentPage:'',\r\n        pageSize:''\r\n      },\r\n      data:{\r\n        list: [],  // 用于在界面显示的数据\r\n        tableData:[],  // 存放真正的数据\r\n        tableTotal:0,\r\n        searchTotal:0\r\n        // listCopy:[], // 用于查询前后存放的假数据\r\n      },\r\n      showEdit: false,\r\n      selectRow:null,\r\n      editCompany:false,\r\n      formRules: {\r\n        roleName: [\r\n          { required: true, message: '请输入角色名称' },\r\n        ]\r\n      },      \r\n      formData: { // 弹出的表单数据\r\n        roleId:'',\r\n        roleName:'',\r\n        remark:'',\r\n      },\r\n    }\r\n  },\r\n\r\n  methods:{\r\n\r\n    // 选择 的 分配权限\r\n    selectChangeEvent({ $table }){\r\n      const records = $table.getCheckboxRecords()\r\n      console.info(`勾选${records.length}个树形节点`, records)\r\n    },\r\n      //  取消按钮\r\n    cancel(){\r\n      this.showEdit=false\r\n    },\r\n      insertEvent(){\r\n        this.showEdit=true,\r\n        this.selectRow=null\r\n        this.formData = {\r\n          roleId:'',\r\n          roleName:'',\r\n          remark:'',\r\n        }\r\n      },\r\n      editEvent(row){\r\n        this.selectRow = row\r\n        this.showEdit = true\r\n        this.formData = {\r\n          roleId:row.roleId,\r\n          roleName:row.roleName,\r\n          remark:row.remark\r\n        }\r\n      },\r\n    async showMenuBtn(row){\r\n      row.menu.forEach(item=>{\r\n        this.checkRowKeys.push(item.id)\r\n      })\r\n      this.showMenu=true\r\n    },\r\n    getAllMenu(){\r\n      this.tableLoading = true\r\n      this.$store.dispatch(\"GetAllMenu\").then((res)=>{\r\n        console.log(res)\r\n          let statusCode = res.data.statusCode\r\n          if(statusCode==200){\r\n            this.menuList=res.data.data\r\n            this.tableLoading = false\r\n          }else{\r\n            this.tableLoading = false\r\n            VXETable.modal.message({ content: '加载失败', status: 'error' })\r\n          }\r\n      }).catch((err)=>{\r\n        this.tableLoading = false\r\n        VXETable.modal.message({ content: '加载失败', status: 'error' })\r\n      })\r\n    },\r\n    getRoleList(){\r\n      this.$store.dispatch('GetRoleList').then((res) => {  \r\n        let statusCode = res.data.statusCode\r\n        if(statusCode==200){\r\n            console.log(res)\r\n            this.data.tableTotal=res.data.data.length\r\n            this.tablePage.total=this.data.tableTotal\r\n            this.data.tableData=res.data.data\r\n            this.data.list=this.data.tableData\r\n            this.tableLoading = false\r\n        }\r\n\r\n        }).catch((err) => {\r\n          console.log(err)\r\n            this.$message({\r\n                showClose: true,\r\n                message: '无权访问！',\r\n                type: 'error'\r\n            });\r\n        })\r\n    },\r\n\r\n    resetEvent(){\r\n      if(this.searchFlag){\r\n        this.searchFlag=false\r\n        this.filter.name='',\r\n        this.getRoleList()\r\n        this.tablePage.total=this.data.tableTotal\r\n      }\r\n    },\r\n\r\n    searchRoleByName(){\r\n      this.$store.dispatch(\"SearchRoleByName\",roleName).then((res)=>{\r\n        let statusCode = res.data.statusCode\r\n        if (statusCode==200) {\r\n            this.data.list=res.data.data\r\n            this.tableLoading = false               \r\n        } else {\r\n            console.log(\"错误\")\r\n        }\r\n      }).catch((err) => {\r\n          console.log(err);\r\n          this.$message({\r\n            showClose: true,\r\n            message: '无权访问！',\r\n            type: 'error'\r\n          });\r\n      })\r\n    },\r\n\r\n      // 搜索事件\r\n    async searchEvent() {\r\n      const roleName = this.$XEUtils.toValueString(this.filter.name).trim().toLowerCase()\r\n      if(roleName){\r\n        this.searchFlag=true\r\n        this.searchInfo.name=roleName\r\n        // this.searchInfo.currentPage=this.tablePage.currentPage\r\n        // this.searchInfo.pageSize=this.tablePage.pageSize\r\n        await this.searchRoleByName(roleName)\r\n      }\r\n    },\r\n\r\n    insertRole(roleInfo){\r\n       this.$store.dispatch(\"InsertRole\",roleInfo).then((res)=>{\r\n        console.log(roleInfo)\r\n          let statusCode = res.data.statusCode\r\n          if(statusCode==200){\r\n            this.submitLoading = false\r\n            VXETable.modal.message({ content: '新增成功', status: 'success' })\r\n            this.getRoleList()\r\n            this.showEdit = false\r\n            this.data.tableTotal=this.data.tableTotal+1\r\n            this.tablePage.total=this.data.tableTotal\r\n          }else{\r\n            this.submitLoading = false\r\n            this.showEdit = true\r\n            VXETable.modal.message({ content: '新增错误', status: 'error' })\r\n          }\r\n      }).catch((err)=>{\r\n          this.submitLoading = false\r\n          this.showEdit = true\r\n          console.log(\"错误\"+err)\r\n          VXETable.modal.message({ content: '新增错误', status: 'error' })\r\n      })\r\n    },\r\n    updateRole(roleInfo){\r\n      this.$store.dispatch(\"UpdateRole\",roleInfo).then((res)=>{\r\n        let statusCode = res.data.statusCode\r\n          if(statusCode==200){\r\n            this.submitLoading = false\r\n            VXETable.modal.message({ content: '更新成功', status: 'success' })\r\n            this.getRoleList()\r\n            this.showEdit = false\r\n          }else{\r\n            this.submitLoading = false\r\n            this.showEdit = true\r\n            VXETable.modal.message({ content: '更新错误', status: 'error' })\r\n          }\r\n      }).catch((err)=>{\r\n          this.submitLoading = false\r\n          this.showEdit = true\r\n          VXETable.modal.message({ content: '更新错误', status: 'error' })\r\n      })\r\n    },\r\n    //  提交\r\n    submitEvent() {\r\n      var submitFormData={};\r\n      for(var item in this.formData){\r\n          if(this.formData[item])\r\n            submitFormData[item]=this.formData[item]\r\n      }\r\n      if(this.selectRow){\r\n         submitFormData[\"updateBy\"]=this.username\r\n         this.updateRole(submitFormData)\r\n      }\r\n      if(!this.selectRow){\r\n        submitFormData[\"createBy\"]=this.username\r\n        this.insertRole(submitFormData)\r\n      }\r\n    },\r\n    \r\n    // 删除  async 和 await来实现同步和异步\r\n    async removeEvent(row) {\r\n      console.log(row.roleId)\r\n      const type = await VXETable.modal.confirm('您确定要删除该数据?')\r\n      if (type === 'confirm'){\r\n        let roleId=row.roleId\r\n        await this.deleteRoleById(roleId)\r\n        \r\n      }\r\n    },\r\n    // 删除员工\r\n    deleteRoleById(roleId){\r\n      this.$store.dispatch('DeleteRoleById',roleId).then((res=>{\r\n        let statusCode = res.data.statusCode\r\n          if(statusCode==200){\r\n            VXETable.modal.message({ content: '删除成功', status: 'success' })\r\n            this.data.tableTotal=this.data.tableTotal-1\r\n            this.tablePage.total=this.data.tableTotal\r\n            this.getRoleList()\r\n          }else{\r\n            VXETable.modal.message({ content: '删除失败', status: 'error' })\r\n          }\r\n      }))\r\n    },\r\n\r\n    // 分页组件触发 \r\n    handlePageChange ({ currentPage, pageSize }) {\r\n      this.tablePage.currentPage = currentPage\r\n      this.tablePage.pageSize = pageSize\r\n      if(this.searchFlag){\r\n        this.searchEvent()\r\n      }else{\r\n        this.getCompanyListByPage()\r\n      }\r\n    },\r\n  },\r\n\r\n  async created(){\r\n      await this.getRoleList()\r\n      await this.getAllMenu()\r\n  }\r\n}\r\n</script>\r\n  \r\n  <style scoped>\r\n  #box{\r\n    width: 95%;\r\n    height: 100%;\r\n    margin: auto;\r\n    margin-top: 20px;\r\n  }\r\n  #box .table{\r\n    margin-top: 20px;\r\n    margin: auto;\r\n  }\r\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}