{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport request from '@/utils/request'; //引入封装好的 axios 请求\n\nexport function getAllCompany() {\n  // 获取 公司列表\n  return request({\n    //使用封装好的 axios 进行网络请求\n    url: '/getAllCompany',\n    method: 'get'\n  });\n}\nexport function updateCompany(company) {\n  // 更新公司\n  return request({\n    //使用封装好的 axios 进行网络请求\n    url: '/updateCompany',\n    method: 'post',\n    data: company\n  });\n}\nexport function insertCompany(company) {\n  // 插入公司\n  return request({\n    //使用封装好的 axios 进行网络请求\n    url: '/insertCompany',\n    method: 'post',\n    data: company\n  });\n}\nexport function deleteCommpanyById(id) {\n  // 删除公司\n  return request({\n    //使用封装好的 axios 进行网络请求\n    url: '/deleteCommpanyById',\n    method: 'get',\n    params: {\n      id: id\n    }\n  });\n}\n\n/*\r\n     分页查询\r\n    currentPage：求第几页的数据\r\n    pageSize：每页显示 pageSize 条数据\r\n*/\nexport function getCompanyListByPage(tablePage) {\n  var currentPage = tablePage.currentPage;\n  var pageSize = tablePage.pageSize;\n  return request({\n    url: '/getCompanyListByPage',\n    method: 'get',\n    params: {\n      currentPage: currentPage,\n      pageSize: pageSize\n    }\n  });\n}\n\n/**\r\n * 获取公司列表总的数量\r\n */\nexport function getCompanyListTotalPage() {\n  return request({\n    url: '/getCompanyListTotalPage',\n    method: 'get'\n  });\n}\n\n/**\r\n * @param name:用户名 \r\n * @param nickName:姓名\r\n * 根据用户名和姓名 查询用户列表\r\n */\n\nexport function searchUserList(searchInfo) {\n  var name = searchInfo.name;\n  var nickName = searchInfo.nickName;\n  var pageSize = searchInfo.pageSize;\n  var currentPage = searchInfo.currentPage;\n  return request({\n    url: '/searchUserList',\n    method: 'get',\n    params: {\n      name: name,\n      nickName: nickName,\n      currentPage: currentPage,\n      pageSize: pageSize\n    }\n  });\n}","map":{"version":3,"names":["request","getAllCompany","url","method","updateCompany","company","data","insertCompany","deleteCommpanyById","id","params","getCompanyListByPage","tablePage","currentPage","pageSize","getCompanyListTotalPage","searchUserList","searchInfo","name","nickName"],"sources":["D:/program/LanqiaoVue/vue-demo/src/api/companyApi.js"],"sourcesContent":["import request from '@/utils/request' //引入封装好的 axios 请求\r\n\r\nexport function getAllCompany() { // 获取 公司列表\r\n  return request({ //使用封装好的 axios 进行网络请求\r\n    url: '/getAllCompany',\r\n    method: 'get',\r\n  })\r\n}\r\n\r\nexport function updateCompany(company) { // 更新公司\r\n  return request({ //使用封装好的 axios 进行网络请求\r\n    url: '/updateCompany',\r\n    method: 'post',\r\n    data:company\r\n  })\r\n}\r\n\r\nexport function insertCompany(company) { // 插入公司\r\n  return request({ //使用封装好的 axios 进行网络请求\r\n    url: '/insertCompany',\r\n    method: 'post',\r\n    data:company\r\n  })\r\n}\r\n\r\nexport function deleteCommpanyById(id) { // 删除公司\r\n  return request({ //使用封装好的 axios 进行网络请求\r\n    url: '/deleteCommpanyById',\r\n    method: 'get',\r\n    params:{\r\n      id:id\r\n    }\r\n  })\r\n}\r\n\r\n/*\r\n     分页查询\r\n    currentPage：求第几页的数据\r\n    pageSize：每页显示 pageSize 条数据\r\n*/ \r\nexport function getCompanyListByPage(tablePage){\r\n  let currentPage=tablePage.currentPage\r\n  let pageSize=tablePage.pageSize\r\n  return request({\r\n    url:'/getCompanyListByPage',\r\n    method:'get',\r\n    params:{\r\n      currentPage:currentPage,\r\n      pageSize:pageSize\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * 获取公司列表总的数量\r\n */\r\nexport function getCompanyListTotalPage(){\r\n  return request({\r\n    url:'/getCompanyListTotalPage',\r\n    method:'get'\r\n  })\r\n}\r\n\r\n/**\r\n * @param name:用户名 \r\n * @param nickName:姓名\r\n * 根据用户名和姓名 查询用户列表\r\n */\r\n\r\nexport function searchUserList(searchInfo){\r\n  let name=searchInfo.name\r\n  let nickName=searchInfo.nickName\r\n  let pageSize=searchInfo.pageSize\r\n  let currentPage=searchInfo.currentPage\r\n  return request({\r\n    url:'/searchUserList',\r\n    method:'get',\r\n    params:{\r\n      name:name,\r\n      nickName:nickName,\r\n      currentPage:currentPage,\r\n      pageSize:pageSize\r\n    }\r\n  })\r\n}"],"mappings":";AAAA,OAAOA,OAAO,MAAM,iBAAiB,EAAC;;AAEtC,OAAO,SAASC,aAAa,GAAG;EAAE;EAChC,OAAOD,OAAO,CAAC;IAAE;IACfE,GAAG,EAAE,gBAAgB;IACrBC,MAAM,EAAE;EACV,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,aAAa,CAACC,OAAO,EAAE;EAAE;EACvC,OAAOL,OAAO,CAAC;IAAE;IACfE,GAAG,EAAE,gBAAgB;IACrBC,MAAM,EAAE,MAAM;IACdG,IAAI,EAACD;EACP,CAAC,CAAC;AACJ;AAEA,OAAO,SAASE,aAAa,CAACF,OAAO,EAAE;EAAE;EACvC,OAAOL,OAAO,CAAC;IAAE;IACfE,GAAG,EAAE,gBAAgB;IACrBC,MAAM,EAAE,MAAM;IACdG,IAAI,EAACD;EACP,CAAC,CAAC;AACJ;AAEA,OAAO,SAASG,kBAAkB,CAACC,EAAE,EAAE;EAAE;EACvC,OAAOT,OAAO,CAAC;IAAE;IACfE,GAAG,EAAE,qBAAqB;IAC1BC,MAAM,EAAE,KAAK;IACbO,MAAM,EAAC;MACLD,EAAE,EAACA;IACL;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,oBAAoB,CAACC,SAAS,EAAC;EAC7C,IAAIC,WAAW,GAACD,SAAS,CAACC,WAAW;EACrC,IAAIC,QAAQ,GAACF,SAAS,CAACE,QAAQ;EAC/B,OAAOd,OAAO,CAAC;IACbE,GAAG,EAAC,uBAAuB;IAC3BC,MAAM,EAAC,KAAK;IACZO,MAAM,EAAC;MACLG,WAAW,EAACA,WAAW;MACvBC,QAAQ,EAACA;IACX;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA,OAAO,SAASC,uBAAuB,GAAE;EACvC,OAAOf,OAAO,CAAC;IACbE,GAAG,EAAC,0BAA0B;IAC9BC,MAAM,EAAC;EACT,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASa,cAAc,CAACC,UAAU,EAAC;EACxC,IAAIC,IAAI,GAACD,UAAU,CAACC,IAAI;EACxB,IAAIC,QAAQ,GAACF,UAAU,CAACE,QAAQ;EAChC,IAAIL,QAAQ,GAACG,UAAU,CAACH,QAAQ;EAChC,IAAID,WAAW,GAACI,UAAU,CAACJ,WAAW;EACtC,OAAOb,OAAO,CAAC;IACbE,GAAG,EAAC,iBAAiB;IACrBC,MAAM,EAAC,KAAK;IACZO,MAAM,EAAC;MACLQ,IAAI,EAACA,IAAI;MACTC,QAAQ,EAACA,QAAQ;MACjBN,WAAW,EAACA,WAAW;MACvBC,QAAQ,EAACA;IACX;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}