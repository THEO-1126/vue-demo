{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport { getAllCompany, updateCompany, deleteCommpanyById, insertCompany, getCompanyListByPage } from '@/api/companyApi';\nimport { searchCompanyList, searchCompanyListTotalPage, getCompanyListTotalPage } from '@/api/companyApi';\nvar company = {\n  actions: {\n    GetAllCompany: function GetAllCompany(_ref) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        getAllCompany().then(function (response) {\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    UpdateCompany: function UpdateCompany(_ref2, menu) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        updateCompany(menu).then(function (response) {\n          //使用 permission 接口进行网络请求\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          console.log(\"company.js UpdateCompany 错误\");\n          reject(error);\n        });\n      });\n    },\n    InsertCompany: function InsertCompany(_ref3, menu) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        insertCompany(menu).then(function (response) {\n          //使用 permission 接口进行网络请求\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          console.log(\"company.js InsertCompany 错误\");\n          reject(error);\n        });\n      });\n    },\n    DeleteCommpanyById: function DeleteCommpanyById(_ref4, id) {\n      var commit = _ref4.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        deleteCommpanyById(id).then(function (response) {\n          //使用 permission 接口进行网络请求\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          console.log(\"company.js DeleteCommpanyById 错误\");\n          reject(error);\n        });\n      });\n    },\n    GetCompanyListByPage: function GetCompanyListByPage(_ref5, tablePage) {\n      var commit = _ref5.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        getCompanyListByPage(tablePage).then(function (response) {\n          //使用 permission 接口进行网络请求\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          console.log(\"company.js GetCompanyListByPage 错误\");\n          reject(error);\n        });\n      });\n    }\n  }\n};\nexport default company;","map":{"version":3,"names":["getAllCompany","updateCompany","deleteCommpanyById","insertCompany","getCompanyListByPage","searchCompanyList","searchCompanyListTotalPage","getCompanyListTotalPage","company","actions","GetAllCompany","commit","Promise","resolve","reject","then","response","catch","error","UpdateCompany","menu","console","log","InsertCompany","DeleteCommpanyById","id","GetCompanyListByPage","tablePage"],"sources":["D:/program/LanqiaoVue/vue-demo/src/store/modules/company.js"],"sourcesContent":["import { getAllCompany,updateCompany,deleteCommpanyById,insertCompany,getCompanyListByPage} from '@/api/companyApi' \r\nimport {searchCompanyList,searchCompanyListTotalPage,getCompanyListTotalPage} from '@/api/companyApi' \r\nconst company = {\r\n\r\n  actions: {\r\n\r\n    GetAllCompany({ commit }) { \r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        getAllCompany().then(response => { \r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    UpdateCompany({commit},menu){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        updateCompany(menu).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"company.js UpdateCompany 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    InsertCompany({commit},menu){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        insertCompany(menu).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"company.js InsertCompany 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    DeleteCommpanyById({commit},id){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        deleteCommpanyById(id).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"company.js DeleteCommpanyById 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    GetCompanyListByPage({commit},tablePage){\r\n        return new Promise((resolve, reject) => { //封装一个 Promise\r\n        getCompanyListByPage(tablePage).then(response => { //使用 permission 接口进行网络请求\r\n            resolve(response) //将结果封装进 Promise\r\n          }).catch(error => {\r\n            console.log(\"company.js GetCompanyListByPage 错误\")\r\n            reject(error)\r\n          })\r\n        })\r\n      },\r\n  }\r\n}\r\n\r\nexport default company\r\n"],"mappings":";AAAA,SAASA,aAAa,EAACC,aAAa,EAACC,kBAAkB,EAACC,aAAa,EAACC,oBAAoB,QAAO,kBAAkB;AACnH,SAAQC,iBAAiB,EAACC,0BAA0B,EAACC,uBAAuB,QAAO,kBAAkB;AACrG,IAAMC,OAAO,GAAG;EAEdC,OAAO,EAAE;IAEPC,aAAa,+BAAa;MAAA,IAAVC,MAAM,QAANA,MAAM;MACpB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QAAE;QACxCd,aAAa,EAAE,CAACe,IAAI,CAAC,UAAAC,QAAQ,EAAI;UAC/BH,OAAO,CAACG,QAAQ,CAAC,EAAC;QACpB,CAAC,CAAC,CAACC,KAAK,CAAC,UAAAC,KAAK,EAAI;UAChBJ,MAAM,CAACI,KAAK,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAEDC,aAAa,gCAAUC,IAAI,EAAC;MAAA,IAAbT,MAAM,SAANA,MAAM;MACnB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QAAE;QACxCb,aAAa,CAACmB,IAAI,CAAC,CAACL,IAAI,CAAC,UAAAC,QAAQ,EAAI;UAAE;UACrCH,OAAO,CAACG,QAAQ,CAAC,EAAC;QACpB,CAAC,CAAC,CAACC,KAAK,CAAC,UAAAC,KAAK,EAAI;UAChBG,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;UAC1CR,MAAM,CAACI,KAAK,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAEDK,aAAa,gCAAUH,IAAI,EAAC;MAAA,IAAbT,MAAM,SAANA,MAAM;MACnB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QAAE;QACxCX,aAAa,CAACiB,IAAI,CAAC,CAACL,IAAI,CAAC,UAAAC,QAAQ,EAAI;UAAE;UACrCH,OAAO,CAACG,QAAQ,CAAC,EAAC;QACpB,CAAC,CAAC,CAACC,KAAK,CAAC,UAAAC,KAAK,EAAI;UAChBG,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;UAC1CR,MAAM,CAACI,KAAK,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAEDM,kBAAkB,qCAAUC,EAAE,EAAC;MAAA,IAAXd,MAAM,SAANA,MAAM;MACxB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QAAE;QACxCZ,kBAAkB,CAACuB,EAAE,CAAC,CAACV,IAAI,CAAC,UAAAC,QAAQ,EAAI;UAAE;UACxCH,OAAO,CAACG,QAAQ,CAAC,EAAC;QACpB,CAAC,CAAC,CAACC,KAAK,CAAC,UAAAC,KAAK,EAAI;UAChBG,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;UAC/CR,MAAM,CAACI,KAAK,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAEDQ,oBAAoB,uCAAUC,SAAS,EAAC;MAAA,IAAlBhB,MAAM,SAANA,MAAM;MACxB,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QAAE;QAC1CV,oBAAoB,CAACuB,SAAS,CAAC,CAACZ,IAAI,CAAC,UAAAC,QAAQ,EAAI;UAAE;UAC/CH,OAAO,CAACG,QAAQ,CAAC,EAAC;QACpB,CAAC,CAAC,CAACC,KAAK,CAAC,UAAAC,KAAK,EAAI;UAChBG,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;UACjDR,MAAM,CAACI,KAAK,CAAC;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACJ;AACF,CAAC;AAED,eAAeV,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}