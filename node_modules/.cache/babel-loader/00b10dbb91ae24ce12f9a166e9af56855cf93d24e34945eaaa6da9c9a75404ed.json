{"ast":null,"code":"import _regeneratorRuntime from \"D:/program/LanqiaoVue/vue-demo/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/program/LanqiaoVue/vue-demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"D:/program/LanqiaoVue/vue-demo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport { defineComponent, reactive, ref } from 'vue';\nimport { dataFormat } from '../../utils/dateUtil'; // 日期格式化\nimport { VXETable, VxeTableInstance } from 'vxe-table';\nimport console from 'console';\nexport default {\n  name: \"userList\",\n  data: function data() {\n    return {\n      tableLoading: false,\n      submitLoading: false,\n      tablePage: {\n        currentPage: 1,\n        pageSize: 5,\n        pageSizes: [5, 10, 20, 50, 100],\n        total: 0\n      },\n      data: {\n        filterName: '',\n        list: [],\n        // 用于在界面显示的数据\n        tableData: [],\n        // 存放真正的数据\n        listCopy: [] // 用于查询前后存放的假数据\n      },\n\n      showEdit: false,\n      selectRow: null,\n      formRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名'\n        }],\n        nickName: [{\n          required: true,\n          message: '请输入姓名'\n        }],\n        age: [{\n          required: true,\n          message: '请输入年龄'\n        }],\n        mobile: [{\n          required: true,\n          message: '请输入手机号'\n        }, {\n          min: 11,\n          max: 11,\n          message: '长度 11 个字符'\n        }],\n        identity: [{\n          required: true,\n          message: '请输入身份证'\n        }, {\n          min: 18,\n          max: 18,\n          message: '长度 18 个字符'\n        }],\n        homeAddress: [{\n          required: true,\n          message: '请输入家庭住址'\n        }],\n        roleIdList: [{\n          required: true,\n          message: '请选择角色'\n        }],\n        status: [{\n          required: true,\n          message: '请选择状态'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码'\n        }]\n      },\n      formData: {\n        // 弹出的表单数据\n        username: '',\n        nickName: '',\n        mobile: '',\n        roleName: '',\n        onboardingTime: '',\n        departureTime: '',\n        age: '',\n        homeAddress: '',\n        status: '',\n        roleIdList: '',\n        identity: '',\n        password: ''\n      },\n      roleList: [],\n      xTable: ref < VxeTableInstance > {}\n    };\n  },\n  methods: {\n    insertEvent: function insertEvent() {\n      var _this$formData;\n      this.showEdit = true, this.selectRow = null, this.getRoleNameList();\n      this.formData = (_this$formData = {\n        username: '',\n        nickName: '',\n        mobile: '',\n        identity: '',\n        onboardingTime: '',\n        departureTime: '',\n        age: '',\n        homeAddress: '',\n        status: ''\n      }, _defineProperty(_this$formData, \"identity\", ''), _defineProperty(_this$formData, \"password\", ''), _defineProperty(_this$formData, \"roleIdList\", ''), _this$formData);\n    },\n    editEvent: function editEvent(row) {\n      this.getRoleNameList();\n      this.selectRow = row;\n      this.showEdit = true;\n      this.formData = {\n        userId: row.userId,\n        username: row.username,\n        nickName: row.nickName,\n        mobile: row.mobile,\n        onboardingTime: row.onboardingTime,\n        departureTime: row.departureTime,\n        age: row.age,\n        homeAddress: row.homeAddress,\n        status: row.status,\n        identity: row.identity,\n        roleIdList: row.roleIdList\n      };\n    },\n    // 获取员工列表\n    getUserList: function getUserList() {\n      var _this = this;\n      this.tableLoading = true;\n      setTimeout(function () {\n        _this.$store.dispatch('GetUserList').then(function (res) {\n          var statusCode = res.data.statusCode;\n          // 判断结果\n          if (statusCode == 200) {\n            _this.data.tableData = res.data.data;\n            // 日期格式化            \n            _this.data.tableData.forEach(function (item) {\n              var roleIdList = [];\n              item.roleList.forEach(function (i) {\n                roleIdList.push(i.roleId);\n              });\n              item.roleIdList = roleIdList;\n              if (item.onboardingTime != null) {\n                item.onboardingTime = dataFormat(item.onboardingTime);\n              }\n              if (item.departureTime != null) {\n                item.departureTime = dataFormat(item.departureTime);\n              }\n            });\n            _this.tablePage.total = res.data.data.length;\n            _this.tableLoading = false;\n          } else {\n            _this.$message({\n              showClose: true,\n              message: '加载失败！',\n              type: 'error'\n            });\n          }\n        }).catch(function (err) {\n          console.log(err);\n          _this.$message({\n            showClose: true,\n            message: '无权访问！',\n            type: 'error'\n          });\n        });\n      }, 200);\n    },\n    //  分页查询\n    getUserListByPage: function getUserListByPage() {\n      var _this2 = this;\n      this.tableLoading = true;\n      setTimeout(function () {\n        _this2.$store.dispatch('GetUserListByPage', _this2.tablePage).then(function (res) {\n          var statusCode = res.data.statusCode;\n          // 判断结果\n          if (statusCode == 200) {\n            _this2.data.list = res.data.data;\n            _this2.data.listCopy = _this2.data.list;\n            _this2.tableLoading = false;\n            _this2.data.list.forEach(function (item) {\n              var roleIdList = [];\n              item.roleList.forEach(function (i) {\n                roleIdList.push(i.roleId);\n              });\n              item.roleIdList = roleIdList;\n              if (item.onboardingTime != null) {\n                item.onboardingTime = dataFormat(item.onboardingTime);\n              }\n              if (item.departureTime != null) {\n                item.departureTime = dataFormat(item.departureTime);\n              }\n            });\n          } else {\n            console.log(\"错误\");\n          }\n        }).catch(function (err) {\n          console.log(err);\n          _this2.$message({\n            showClose: true,\n            message: '无权访问！',\n            type: 'error'\n          });\n        });\n      }, 200);\n    },\n    // 搜索事件\n    searchEvent: function searchEvent() {\n      var _this3 = this;\n      var filterName = this.$XEUtils.toValueString(this.data.filterName).trim().toLowerCase();\n      if (filterName) {\n        var filterRE = new RegExp(filterName, 'gi');\n        var searchProps = ['nickName', 'username'];\n        var rest = this.data.tableData.filter(function (item) {\n          return searchProps.some(function (key) {\n            return _this3.$XEUtils.toValueString(item[key]).toLowerCase().indexOf(filterName) > -1;\n          });\n        });\n        this.data.list = rest.map(function (row) {\n          var item = Object.assign({}, row);\n          searchProps.forEach(function (key) {\n            item[key] = _this3.$XEUtils.toValueString(item[key]).replace(filterRE, function (match) {\n              return \"<span class=\\\"keyword-lighten\\\">\".concat(match, \"</span>\");\n            });\n          });\n          return item;\n        });\n      } else {\n        this.data.list = this.data.listCopy;\n      }\n    },\n    insertUser: function insertUser(userInfo) {\n      var _this4 = this;\n      this.$store.dispatch(\"InsertUser\", userInfo).then(function (res) {\n        console.log(res.data);\n        if (res.data) {\n          _this4.submitLoading = false;\n          VXETable.modal.message({\n            content: '新增成功',\n            status: 'success'\n          });\n          _this4.showEdit = false;\n        } else {\n          _this4.submitLoading = false;\n          _this4.showEdit = true;\n          VXETable.modal.message({\n            content: '新增错误',\n            status: 'error'\n          });\n        }\n      }).catch(function (err) {\n        _this4.submitLoading = false;\n        _this4.showEdit = true;\n        console.log(\"错误\" + err);\n        VXETable.modal.message({\n          content: '新增错误',\n          status: 'error'\n        });\n      });\n    },\n    updateUser: function updateUser(userInfo) {\n      var _this5 = this;\n      this.$store.dispatch(\"UpdateUser\", userInfo).then(function (res) {\n        if (res.data) {\n          _this5.submitLoading = false;\n          VXETable.modal.message({\n            content: '更新成功',\n            status: 'success'\n          });\n          _this5.showEdit = false;\n        } else {\n          _this5.submitLoading = false;\n          _this5.showEdit = true;\n          VXETable.modal.message({\n            content: '更新错误',\n            status: 'error'\n          });\n        }\n      }).catch(function (err) {\n        _this5.submitLoading = false;\n        _this5.showEdit = true;\n        VXETable.modal.message({\n          content: '更新错误',\n          status: 'error'\n        });\n      });\n    },\n    //  提交\n    submitEvent: function submitEvent() {\n      this.submitLoading = true;\n      var roleList = [];\n      var submitFromData = {};\n      for (var i = 0; i < this.formData.roleIdList.length; i++) {\n        roleList[i] = {};\n        roleList[i][\"roleId\"] = this.formData.roleIdList[i];\n      }\n      for (var item in this.formData) {\n        if (this.formData[item]) {\n          submitFromData[item] = this.formData[item];\n        }\n      }\n      submitFromData[\"roleList\"] = roleList;\n      if (!this.selectRow) {\n        this.insertUser(submitFromData);\n      } else {\n        this.updateUser;\n      }\n\n      // this.insertUser()\n      // this.submitLoading = true\n      // setTimeout(() => {\n      //   this.submitLoading = false\n      //   this.showEdit = false\n      //   if (this.selectRow) {\n      //     VXETable.modal.message({ content: '保存成功', status: 'success' })\n      //   } else {\n      //     VXETable.modal.message({ content: '新增成功', status: 'success' })\n      //   }\n      // }, 500)\n    },\n    // 删除  async 和 await来实现同步和异步\n    removeEvent: function removeEvent(row) {\n      var _this6 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var type, userId, index;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return VXETable.modal.confirm('您确定要删除该数据?');\n            case 2:\n              type = _context.sent;\n              if (!(type === 'confirm')) {\n                _context.next = 11;\n                break;\n              }\n              userId = row.userId;\n              index = _this6.data.list.findIndex(function (item) {\n                if (item.userId == userId) {\n                  console.log(\"item.userId:\" + item.userId);\n                  return true;\n                }\n              });\n              _context.next = 8;\n              return _this6.deleteUser(userId);\n            case 8:\n              _this6.data.tableData.splice(index, 1);\n              _this6.tablePage.total = _this6.data.tableData.length;\n              _this6.getUserListByPage();\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    // 删除员工\n    deleteUser: function deleteUser(userId) {\n      var _this7 = this;\n      this.$store.dispatch('DeleteUser', userId).then(function (res) {\n        if (res) {\n          _this7.$message({\n            showClose: true,\n            message: '删除成功！',\n            type: 'success'\n          });\n        } else {\n          _this7.$message({\n            showClose: true,\n            message: '删除失败！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 获取所有的角色名\n    getRoleNameList: function getRoleNameList() {\n      var _this8 = this;\n      this.$store.dispatch('GetRoleNameList').then(function (res) {\n        _this8.roleList = res.data;\n      });\n    },\n    // 分页组件触发 \n    handlePageChange: function handlePageChange(_ref) {\n      var currentPage = _ref.currentPage,\n        pageSize = _ref.pageSize;\n      this.tablePage.currentPage = currentPage;\n      this.tablePage.pageSize = pageSize;\n      this.getUserListByPage();\n    }\n  },\n  created: function created() {\n    var _this9 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _this9.getUserList();\n          case 2:\n            _context2.next = 4;\n            return _this9.getUserListByPage();\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAP;QACAQ;QACAC;QAAA;QACAC;QAAA;QACAC;MACA;;MACAC;MACAC;MACAC;QACAC,WACA;UAAAC;UAAAC;QAAA,EACA;QACAC,WACA;UAAAF;UAAAC;QAAA,EACA;QACAE,MACA;UAAAH;UAAAC;QAAA,EACA;QACAG,SACA;UAAAJ;UAAAC;QAAA,GACA;UAAAI;UAAAC;UAAAL;QAAA,EACA;QACAM,WACA;UAAAP;UAAAC;QAAA,GACA;UAAAI;UAAAC;UAAAL;QAAA,EACA;QACAO,cACA;UAAAR;UAAAC;QAAA,EACA;QACAQ,aACA;UAAAT;UAAAC;QAAA,EACA;QACAS,SACA;UAAAV;UAAAC;QAAA,EACA;QACAU,WACA;UAAAX;UAAAC;QAAA;MAEA;MACAW;QAAA;QACAb;QACAG;QACAE;QACAS;QACAC;QACAC;QACAZ;QACAK;QACAE;QACAD;QACAF;QACAI;MACA;MACAK;MACAC;IACA;EACA;EAEAC;IACAC;MAAA;MACA,sBACA,uBACA;MACA;QACApB;QACAG;QACAE;QACAG;QACAO;QACAC;QACAZ;QACAK;QACAE;MAAA,+CACA,iDACA,mDACA,oBACA;IACA;IACAU;MACA;MACA;MACA;MACA;QACAC;QACAtB;QACAG;QACAE;QACAU;QACAC;QACAZ;QACAK;QACAE;QACAH;QACAE;MACA;IACA;IACA;IACAa;MAAA;MACA;MACAC;QACA;UACA;UACA;UACA;YACA;YACA;YACA;cACA;cACAC;gBACAf;cACA;cACAe;cACA;gBACAA;cACA;cACA;gBACAA;cACA;YACA;YACA;YACA;UACA;YACA;cACAC;cACAxB;cACAyB;YACA;UACA;QACA;UACAC;UACA;YACAF;YACAxB;YACAyB;UACA;QACA;MACA;IACA;IAEA;IACAE;MAAA;MACA;MACAL;QACA;UACA;UACA;UACA;YACA;YACA;YACA;YACA;cACA;cACAC;gBACAf;cACA;cACAe;cACA;gBACAA;cACA;cACA;gBACAA;cACA;YACA;UACA;YACAG;UACA;QACA;UACAA;UACA;YACAF;YACAxB;YACAyB;UACA;QACA;MACA;IACA;IACA;IACAG;MAAA;MACA;MACA;QACA;QACA;QACA;UAAA;YAAA;UAAA;QAAA;QACA;UACA;UACAC;YACAN;cAAA;YAAA;UACA;UACA;QACA;MACA;QACA;MACA;IACA;IACAO;MAAA;MACA;QACAJ;QACA;UACA;UACAK;YAAAC;YAAAvB;UAAA;UACA;QACA;UACA;UACA;UACAsB;YAAAC;YAAAvB;UAAA;QACA;MACA;QACA;QACA;QACAiB;QACAK;UAAAC;UAAAvB;QAAA;MACA;IACA;IACAwB;MAAA;MACA;QACA;UACA;UACAF;YAAAC;YAAAvB;UAAA;UACA;QACA;UACA;UACA;UACAsB;YAAAC;YAAAvB;UAAA;QACA;MACA;QACA;QACA;QACAsB;UAAAC;UAAAvB;QAAA;MACA;IACA;IACA;IACAyB;MACA;MACA;MACA;MACA;QACAnB;QACAA;MACA;MACA;QACA;UACAoB;QACA;MACA;MACAA;MACA;QACA;MACA;QACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACAL;YAAA;cAAAN;cAAA,MACAA;gBAAA;gBAAA;cAAA;cACAL;cACAiB;gBACA;kBACAX;kBACA;gBACA;cACA;cAAA;cAAA,OACA;YAAA;cACA;cACA;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAEA;IACA;IACAY;MAAA;MACA;QACA;UACA;YACAd;YACAxB;YACAyB;UACA;QACA;UACA;YACAD;YACAxB;YACAyB;UACA;QACA;MACA;IACA;IAEA;IACAc;MAAA;MACA;QACA;MACA;IACA;IACA;IACAC;MAAA;QAAApD;MACA;MACA;MACA;IACA;EACA;EAEAqD;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACA;UAAA;YAAA;YAAA,OACA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EACA;AACA","names":["name","data","tableLoading","submitLoading","tablePage","currentPage","pageSize","pageSizes","total","filterName","list","tableData","listCopy","showEdit","selectRow","formRules","username","required","message","nickName","age","mobile","min","max","identity","homeAddress","roleIdList","status","password","formData","roleName","onboardingTime","departureTime","roleList","xTable","methods","insertEvent","editEvent","userId","getUserList","setTimeout","item","showClose","type","console","getUserListByPage","searchEvent","searchProps","insertUser","VXETable","content","updateUser","submitEvent","submitFromData","removeEvent","index","deleteUser","getRoleNameList","handlePageChange","created"],"sourceRoot":"src/views/system","sources":["userList.vue"],"sourcesContent":["<template>\r\n  <div id=\"view\">\r\n    <div id=\"box\">\r\n      <vxe-toolbar>\r\n          <template #buttons>\r\n            <vxe-input v-model=\"data.filterName\" type=\"search\" placeholder=\"输入账号或姓名\" @keyup=\"searchEvent()\"></vxe-input>\r\n            <vxe-button status=\"primary\" icon=\"vxe-icon-square-plus\" @click=\"insertEvent()\">新增</vxe-button>\r\n          </template>\r\n        </vxe-toolbar>\r\n        <vxe-table :data=\"data.list\" class=\"table\"\r\n            border\r\n            ref=\"userTable\"\r\n            height=\"80%\"\r\n            :row-config=\"{isHover: true}\"\r\n            :loading=\"tableLoading\">\r\n            <vxe-column type=\"seq\" width=\"100\"></vxe-column>\r\n            <vxe-column field=\"nickName\" title=\"姓名\" width=\"100\" sortable type=\"html\"></vxe-column>\r\n            <vxe-column field=\"username\" title=\"账号\" width=\"100\" type=\"html\"></vxe-column>\r\n            <vxe-column field=\"mobile\" title=\"电话\" width=\"120\"></vxe-column>\r\n            <vxe-column field=\"identity\" title=\"身份证\" width=\"100\"></vxe-column>\r\n            <vxe-column field=\"homeAddress\" title=\"家庭住址\" width=\"150\"></vxe-column>\r\n            <vxe-column field=\"onboardingTime\" title=\"入职时间\" width=\"130\" sortable></vxe-column>\r\n            <vxe-column field=\"departureTime\" title=\"离职时间\" width=\"130\" sortable></vxe-column>\r\n            <vxe-column field=\"status\" title=\"状态\" width=\"100\"></vxe-column>\r\n            <vxe-column title=\"操作\" width=\"180\" show-overflow>\r\n            <template #default=\"{ row,rowIndex }\">\r\n              <vxe-button status=\"primary\" icon=\"vxe-icon-edit\" @click=\"editEvent(row)\"></vxe-button>\r\n              <vxe-button status=\"danger\" icon=\"vxe-icon-delete\" @click=\"removeEvent(row,rowIndex)\"></vxe-button>\r\n            </template>\r\n          </vxe-column>\r\n            <template #empty>\r\n            <span style=\"color: red;\">\r\n              <img src=\"https://n.sinaimg.cn/sinacn17/w120h120/20180314/89fc-fyscsmv5911424.gif\">\r\n              <p>没有更多数据了！</p>\r\n            </span>\r\n          </template>\r\n      </vxe-table>\r\n      <vxe-pager\r\n        :loading=\"tableLoading\"\r\n        :current-page=\"tablePage.currentPage\"\r\n        :page-size=\"tablePage.pageSize\"\r\n        :page-sizes= \"tablePage.pageSizes\"\r\n        :total=\"tablePage.total\"\r\n        :layouts=\"['PrevPage', 'JumpNumber', 'NextPage', 'FullJump', 'Sizes', 'Total']\"\r\n        @page-change=\"handlePageChange\">\r\n      </vxe-pager>\r\n\r\n      <!-- 弹出的新增或编辑表单 -->\r\n      <vxe-modal v-model=\"showEdit\" :title=\"selectRow ? '编辑&保存' : '新增&保存'\" width=\"800\" \r\n            min-width=\"600\" min-height=\"300\" :loading=\"submitLoading\" resize destroy-on-close>\r\n          <template #default>\r\n            <vxe-form :data=\"formData\" :rules=\"formRules\" title-align=\"right\" title-width=\"100\" @submit=\"submitEvent\">\r\n              <vxe-form-item field=\"nickName\" title=\"姓名\" :span=\"12\" :item-render=\"{}\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-input v-model=\"data.nickName\" placeholder=\"请输入名称\"></vxe-input>\r\n                </template>\r\n              </vxe-form-item>\r\n              <vxe-form-item field=\"identity\" title=\"身份证\" :span=\"12\" :item-render=\"{}\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-input v-model=\"data.identity\" placeholder=\"请输入身份证\"></vxe-input>\r\n                </template>\r\n              </vxe-form-item>\r\n              <vxe-form-item field=\"age\" title=\"年龄\" :span=\"12\" :item-render=\"{}\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-input v-model=\"data.age\" placeholder=\"请输年龄\"></vxe-input>\r\n                </template>\r\n              </vxe-form-item>\r\n              <vxe-form-item field=\"mobile\" title=\"电话\" :span=\"12\" :item-render=\"{}\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-input v-model=\"data.mobile\" placeholder=\"请输入电话\"></vxe-input>\r\n                </template>\r\n              </vxe-form-item>\r\n              <vxe-form-item field=\"username\" title=\"用户名\" :span=\"12\" :item-render=\"{}\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-input v-model=\"data.username\" placeholder=\"请输入用户名\"></vxe-input>\r\n                </template>\r\n              </vxe-form-item>\r\n\r\n              <vxe-form-item field=\"password\" title=\"密码\" :span=\"12\" :item-render=\"{}\" v-if=\"!selectRow\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-input v-model=\"data.password\" placeholder=\"请输入密码\"></vxe-input>\r\n                </template>\r\n              </vxe-form-item>\r\n\r\n              <vxe-form-item field=\"onboardingTime\" title=\"入职时间\" :span=\"12\" :item-render=\"{}\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-input v-model=\"data.onboardingTime\" type=\"date\" placeholder=\"请选择日期\" transfer></vxe-input>\r\n                </template>\r\n              </vxe-form-item>\r\n              <vxe-form-item field=\"departureTime\" title=\"离职时间\" :span=\"12\" :item-render=\"{}\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-input v-model=\"data.departureTime\" type=\"date\" placeholder=\"请选择日期\" transfer></vxe-input>\r\n                </template>\r\n              </vxe-form-item>\r\n\r\n              <!-- 角色 下拉框多选 -->\r\n              <vxe-form-item field=\"roleIdList\" title=\"角色\" :span=\"12\" :item-render=\"{}\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-select v-model=\"data.roleIdList\" multiple clearable transfer>\r\n                    <vxe-option v-for=\"item in roleList\" :key=\"item.roleId\" :value=\"item.roleId\" :label=\"item.roleName\"></vxe-option>\r\n                  </vxe-select>\r\n                </template>\r\n              </vxe-form-item>\r\n\r\n              <!-- 状态 单选 -->\r\n              <vxe-form-item field=\"status\" title=\"状态\" :span=\"12\" :item-render=\"{}\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-radio-group v-model=\"data.status\">\r\n                    <vxe-radio label=\"在职\" content=\"在职\"></vxe-radio>\r\n                    <vxe-radio label=\"离职\" content=\"离职\"></vxe-radio>\r\n                  </vxe-radio-group>\r\n                </template>\r\n              </vxe-form-item>\r\n\r\n              <vxe-form-item field=\"homeAddress\" title=\"家庭住址\" :span=\"24\" :item-render=\"{}\">\r\n                <template #default=\"{ data }\">\r\n                  <vxe-textarea v-model=\"data.homeAddress\" :autosize=\"{minRows: 2, maxRows: 4}\"></vxe-textarea>\r\n                </template>\r\n              </vxe-form-item>\r\n              \r\n              <vxe-form-item align=\"center\" title-align=\"left\" :span=\"24\">\r\n                <template #default>\r\n                  <vxe-button status=\"primary\" type=\"submit\">提交</vxe-button>\r\n                  <vxe-button type=\"reset\">重置</vxe-button>\r\n                </template>\r\n              </vxe-form-item>\r\n            </vxe-form>\r\n          </template>\r\n        </vxe-modal>\r\n  </div>\r\n</div>\r\n</template>\r\n<script>\r\n import { defineComponent, reactive, ref } from 'vue'\r\nimport {dataFormat} from '../../utils/dateUtil'  // 日期格式化\r\nimport { VXETable,VxeTableInstance } from 'vxe-table'\r\nimport console from 'console'\r\nexport default { \r\n  name:\"userList\",\r\n  data() {\r\n    return {\r\n      tableLoading: false,\r\n      submitLoading: false,\r\n      tablePage: {\r\n        currentPage: 1,\r\n        pageSize: 5,\r\n        pageSizes:[5,10,20,50,100],\r\n        total: 0\r\n      },\r\n      data:{\r\n        filterName: '',\r\n        list: [],  // 用于在界面显示的数据\r\n        tableData:[],  // 存放真正的数据\r\n        listCopy:[], // 用于查询前后存放的假数据\r\n      },\r\n      showEdit: false,\r\n      selectRow:null,\r\n      formRules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名' },\r\n        ],\r\n        nickName: [\r\n          { required: true, message: '请输入姓名' }\r\n        ],\r\n        age: [\r\n          { required: true, message: '请输入年龄' }\r\n        ],\r\n        mobile:[\r\n          { required: true, message: '请输入手机号' },\r\n          { min: 11, max: 11, message: '长度 11 个字符' }\r\n        ],\r\n        identity:[\r\n          { required: true, message: '请输入身份证' },\r\n          { min: 18, max: 18, message: '长度 18 个字符'}\r\n        ],\r\n        homeAddress:[\r\n          { required: true, message: '请输入家庭住址' }\r\n        ],\r\n        roleIdList:[\r\n          { required: true, message: '请选择角色' }\r\n        ],\r\n        status:[\r\n          { required: true, message: '请选择状态' }\r\n        ],\r\n        password:[\r\n          { required: true, message: '请输入密码' }\r\n        ]\r\n      },      \r\n      formData: { // 弹出的表单数据\r\n        username: '',\r\n        nickName: '',\r\n        mobile:'',\r\n        roleName: '',\r\n        onboardingTime:'',\r\n        departureTime:'',\r\n        age: '',\r\n        homeAddress:'',\r\n        status:'',\r\n        roleIdList:'',\r\n        identity:'',\r\n        password:'',\r\n      },\r\n      roleList: [],\r\n      xTable:ref<VxeTableInstance>({})\r\n    }\r\n  },\r\n\r\n  methods:{\r\n      insertEvent(){\r\n        this.showEdit=true,\r\n        this.selectRow=null,\r\n        this.getRoleNameList()\r\n        this.formData = {\r\n          username: '',\r\n          nickName: '',\r\n          mobile:'',\r\n          identity:'',\r\n          onboardingTime:'',\r\n          departureTime:'',\r\n          age: '',\r\n          homeAddress:'',\r\n          status:'',\r\n          identity:'',\r\n          password:'',\r\n          roleIdList:'',\r\n        }\r\n      },\r\n      editEvent(row){\r\n        this.getRoleNameList()\r\n        this.selectRow = row\r\n        this.showEdit = true\r\n        this.formData = {\r\n          userId:row.userId,\r\n          username: row.username,\r\n          nickName: row.nickName,\r\n          mobile:row.mobile,\r\n          onboardingTime:row.onboardingTime,\r\n          departureTime:row.departureTime,\r\n          age: row.age,\r\n          homeAddress:row.homeAddress,\r\n          status:row.status,\r\n          identity:row.identity,\r\n          roleIdList:row.roleIdList\r\n        }\r\n      },\r\n      // 获取员工列表\r\n      getUserList(){\r\n          this.tableLoading = true\r\n          setTimeout(() => {\r\n              this.$store.dispatch('GetUserList').then((res) => {\r\n                let statusCode = res.data.statusCode\r\n                  // 判断结果\r\n              if (statusCode==200) {\r\n                  this.data.tableData=res.data.data     \r\n                  // 日期格式化            \r\n                  this.data.tableData.forEach(item=>{\r\n                    var roleIdList=[]\r\n                    item.roleList.forEach(i=>{\r\n                      roleIdList.push(i.roleId)\r\n                    })\r\n                    item.roleIdList=roleIdList\r\n                    if(item.onboardingTime!=null){\r\n                      item.onboardingTime =dataFormat(item.onboardingTime)\r\n                    }\r\n                    if(item.departureTime!=null){\r\n                      item.departureTime =dataFormat(item.departureTime)\r\n                    }\r\n                  })         \r\n                  this.tablePage.total = res.data.data.length\r\n                  this.tableLoading = false\r\n              } else {\r\n                  this.$message({\r\n                      showClose: true,\r\n                      message: '加载失败！',\r\n                      type: 'error'\r\n                  });\r\n              }\r\n              }).catch((err) => {\r\n                console.log(err)\r\n                  this.$message({\r\n                      showClose: true,\r\n                      message: '无权访问！',\r\n                      type: 'error'\r\n                  });\r\n              })\r\n          },200)\r\n      },\r\n\r\n      //  分页查询\r\n      getUserListByPage(){\r\n        this.tableLoading = true\r\n          setTimeout(() => {\r\n              this.$store.dispatch('GetUserListByPage',this.tablePage).then((res) => {\r\n                let statusCode = res.data.statusCode\r\n                    // 判断结果\r\n                if (statusCode==200) {\r\n                    this.data.list=res.data.data\r\n                    this.data.listCopy=this.data.list\r\n                    this.tableLoading = false\r\n                    this.data.list.forEach(item=>{\r\n                      var roleIdList=[]\r\n                      item.roleList.forEach(i=>{\r\n                        roleIdList.push(i.roleId)\r\n                      })\r\n                      item.roleIdList=roleIdList\r\n                      if(item.onboardingTime!=null){\r\n                        item.onboardingTime =dataFormat(item.onboardingTime)\r\n                      }\r\n                      if(item.departureTime!=null){\r\n                        item.departureTime =dataFormat(item.departureTime)\r\n                      }\r\n                    })\r\n                } else {\r\n                    console.log(\"错误\")\r\n                }\r\n              }).catch((err) => {\r\n                  console.log(err);\r\n                  this.$message({\r\n                    showClose: true,\r\n                    message: '无权访问！',\r\n                    type: 'error'\r\n                  });\r\n              })\r\n          },200)\r\n      },\r\n      // 搜索事件\r\n      searchEvent() {\r\n        const filterName = this.$XEUtils.toValueString(this.data.filterName).trim().toLowerCase()\r\n        if (filterName) {\r\n          const filterRE = new RegExp(filterName, 'gi')\r\n          const searchProps = ['nickName','username']\r\n          const rest = this.data.tableData.filter(item => searchProps.some(key => this.$XEUtils.toValueString(item[key]).toLowerCase().indexOf(filterName) > -1))\r\n          this.data.list = rest.map(row => {\r\n            const item = Object.assign({}, row)\r\n            searchProps.forEach(key => {\r\n              item[key] = this.$XEUtils.toValueString(item[key]).replace(filterRE, match => `<span class=\"keyword-lighten\">${match}</span>`)\r\n            })\r\n            return item\r\n          })\r\n        } else {\r\n          this.data.list = this.data.listCopy\r\n      }\r\n    },\r\n    insertUser(userInfo){\r\n      this.$store.dispatch(\"InsertUser\",userInfo).then((res)=>{\r\n          console.log(res.data)\r\n          if(res.data){\r\n            this.submitLoading = false\r\n            VXETable.modal.message({ content: '新增成功', status: 'success' })\r\n            this.showEdit = false\r\n          }else{\r\n            this.submitLoading = false\r\n            this.showEdit = true\r\n            VXETable.modal.message({ content: '新增错误', status: 'error' })\r\n          }\r\n      }).catch((err)=>{\r\n          this.submitLoading = false\r\n          this.showEdit = true\r\n          console.log(\"错误\"+err)\r\n          VXETable.modal.message({ content: '新增错误', status: 'error' })\r\n      })\r\n    },\r\n    updateUser(userInfo){\r\n      this.$store.dispatch(\"UpdateUser\",userInfo).then((res)=>{\r\n          if(res.data){\r\n            this.submitLoading = false\r\n            VXETable.modal.message({ content: '更新成功', status: 'success' })\r\n            this.showEdit = false\r\n          }else{\r\n            this.submitLoading = false\r\n            this.showEdit = true\r\n            VXETable.modal.message({ content: '更新错误', status: 'error' })\r\n          }\r\n      }).catch((err)=>{\r\n          this.submitLoading = false\r\n          this.showEdit = true\r\n          VXETable.modal.message({ content: '更新错误', status: 'error' })\r\n      })\r\n    },\r\n    //  提交\r\n    submitEvent() {\r\n      this.submitLoading = true\r\n        var roleList=[];\r\n        var submitFromData={};\r\n        for(var i=0;i<this.formData.roleIdList.length;i++){\r\n            roleList[i]={}\r\n            roleList[i][\"roleId\"]=this.formData.roleIdList[i]\r\n        }\r\n        for(var item in this.formData){\r\n          if(this.formData[item]){\r\n            submitFromData[item]=this.formData[item]\r\n          }\r\n        }\r\n        submitFromData[\"roleList\"]=roleList\r\n      if(!this.selectRow){\r\n        this.insertUser(submitFromData)\r\n      }else{\r\n        this.updateUser\r\n      }\r\n\r\n      // this.insertUser()\r\n      // this.submitLoading = true\r\n      // setTimeout(() => {\r\n      //   this.submitLoading = false\r\n      //   this.showEdit = false\r\n      //   if (this.selectRow) {\r\n      //     VXETable.modal.message({ content: '保存成功', status: 'success' })\r\n      //   } else {\r\n      //     VXETable.modal.message({ content: '新增成功', status: 'success' })\r\n      //   }\r\n      // }, 500)\r\n    },\r\n    \r\n    // 删除  async 和 await来实现同步和异步\r\n    async removeEvent(row) {\r\n      const type = await VXETable.modal.confirm('您确定要删除该数据?')\r\n      if (type === 'confirm'){\r\n        let userId=row.userId\r\n        let index = (this.data.list).findIndex(item => {\r\n          if (item.userId==userId) {\r\n            console.log(\"item.userId:\"+item.userId)\r\n            return true\r\n          }\r\n        })\r\n        await this.deleteUser(userId)\r\n        this.data.tableData.splice(index,1)\r\n        this.tablePage.total =  this.data.tableData.length\r\n        this.getUserListByPage()\r\n      }\r\n    },\r\n    // 删除员工\r\n    deleteUser(userId){\r\n        this.$store.dispatch('DeleteUser',userId).then((res=>{\r\n            if(res){\r\n              this.$message({\r\n                showClose: true,\r\n                message: '删除成功！',\r\n                type: 'success'\r\n              });\r\n            }else{\r\n              this.$message({\r\n                showClose: true,\r\n                message: '删除失败！',\r\n                type: 'error'\r\n              });\r\n            }\r\n        }))\r\n    },\r\n\r\n    // 获取所有的角色名\r\n    getRoleNameList(){\r\n      this.$store.dispatch('GetRoleNameList').then((res=>{\r\n        this.roleList=res.data;\r\n      }))\r\n    },\r\n    // 分页组件触发 \r\n    handlePageChange ({ currentPage, pageSize }) {\r\n      this.tablePage.currentPage = currentPage\r\n      this.tablePage.pageSize = pageSize\r\n      this.getUserListByPage()\r\n    },\r\n  },\r\n\r\n  async created(){\r\n      await this.getUserList()\r\n      await this.getUserListByPage()\r\n  }\r\n}\r\n</script>\r\n  \r\n  <style scoped>\r\n  #box{\r\n    width: 95%;\r\n    height: 100%;\r\n    margin: auto;\r\n    margin-top: 20px;\r\n  }\r\n  #box .table{\r\n    margin-top: 20px;\r\n    margin: auto;\r\n  }\r\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}