{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { getAllCompany, updateCompany, deleteCommpanyById, insertCompany, getCompanyListByPage } from '@/api/companyApi';\nimport { searchCompanyList, searchCompanyListTotalPage, getCompanyListTotalPage } from '@/api/companyApi';\nvar company = {\n  actions: {\n    GetAllCompany: function GetAllCompany(_ref) {\n      var _this = this;\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        getAllCompany().then(function (response) {\n          var statusCode = response.data.statusCode;\n          if (statusCode == 401) {\n            VXETable.modal.message({\n              content: res.data.msg,\n              status: 'error'\n            });\n            _this.$router.push({\n              path: \"/login\"\n            });\n          }\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    UpdateCompany: function UpdateCompany(_ref2, menu) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        updateCompany(menu).then(function (response) {\n          //使用 permission 接口进行网络请求\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          console.log(\"company.js UpdateCompany 错误\");\n          reject(error);\n        });\n      });\n    },\n    InsertCompany: function InsertCompany(_ref3, menu) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        insertCompany(menu).then(function (response) {\n          //使用 permission 接口进行网络请求\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          console.log(\"company.js InsertCompany 错误\");\n          reject(error);\n        });\n      });\n    },\n    DeleteCommpanyById: function DeleteCommpanyById(_ref4, id) {\n      var commit = _ref4.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        deleteCommpanyById(id).then(function (response) {\n          //使用 permission 接口进行网络请求\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          console.log(\"company.js DeleteCommpanyById 错误\");\n          reject(error);\n        });\n      });\n    },\n    GetCompanyListByPage: function GetCompanyListByPage(_ref5, tablePage) {\n      var commit = _ref5.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        getCompanyListByPage(tablePage).then(function (response) {\n          //使用 permission 接口进行网络请求\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          console.log(\"company.js GetCompanyListByPage 错误\");\n          reject(error);\n        });\n      });\n    },\n    GetCompanyListTotalPage: function GetCompanyListTotalPage(_ref6) {\n      var commit = _ref6.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        getCompanyListTotalPage().then(function (response) {\n          //使用 permission 接口进行网络请求\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          console.log(\"company.js GetCompanyListTotalPage 错误\");\n          reject(error);\n        });\n      });\n    },\n    SearchCompanyList: function SearchCompanyList(_ref7, searchInfo) {\n      var commit = _ref7.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        searchCompanyList(searchInfo).then(function (response) {\n          //使用 permission 接口进行网络请求\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          console.log(\"company.js SearchCompanyList 错误\");\n          reject(error);\n        });\n      });\n    },\n    SearchCompanyListTotalPage: function SearchCompanyListTotalPage(_ref8, searchInfo) {\n      var commit = _ref8.commit;\n      return new Promise(function (resolve, reject) {\n        //封装一个 Promise\n        searchCompanyListTotalPage(searchInfo).then(function (response) {\n          //使用 permission 接口进行网络请求\n          resolve(response); //将结果封装进 Promise\n        }).catch(function (error) {\n          console.log(\"company.js SearchCompanyListTotalPage 错误\");\n          reject(error);\n        });\n      });\n    }\n  }\n};\nexport default company;","map":{"version":3,"names":["getAllCompany","updateCompany","deleteCommpanyById","insertCompany","getCompanyListByPage","searchCompanyList","searchCompanyListTotalPage","getCompanyListTotalPage","company","actions","GetAllCompany","commit","Promise","resolve","reject","then","response","statusCode","data","VXETable","modal","message","content","res","msg","status","$router","push","path","catch","error","UpdateCompany","menu","console","log","InsertCompany","DeleteCommpanyById","id","GetCompanyListByPage","tablePage","GetCompanyListTotalPage","SearchCompanyList","searchInfo","SearchCompanyListTotalPage"],"sources":["D:/program/LanqiaoVue/vue-demo/src/store/modules/company.js"],"sourcesContent":["import { getAllCompany,updateCompany,deleteCommpanyById,insertCompany,getCompanyListByPage} from '@/api/companyApi' \r\nimport {searchCompanyList,searchCompanyListTotalPage,getCompanyListTotalPage} from '@/api/companyApi' \r\nconst company = {\r\n\r\n  actions: {\r\n\r\n    GetAllCompany({ commit }) { \r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        getAllCompany().then(response => { \r\n          let statusCode = response.data.statusCode\r\n          if(statusCode==401){\r\n            VXETable.modal.message({ content: res.data.msg, status: 'error' })\r\n            this.$router.push({\r\n                path: \"/login\",\r\n            })\r\n          }\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    UpdateCompany({commit},menu){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        updateCompany(menu).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"company.js UpdateCompany 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    InsertCompany({commit},menu){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        insertCompany(menu).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"company.js InsertCompany 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    DeleteCommpanyById({commit},id){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        deleteCommpanyById(id).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"company.js DeleteCommpanyById 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    GetCompanyListByPage({commit},tablePage){\r\n        return new Promise((resolve, reject) => { //封装一个 Promise\r\n        getCompanyListByPage(tablePage).then(response => { //使用 permission 接口进行网络请求\r\n            resolve(response) //将结果封装进 Promise\r\n          }).catch(error => {\r\n            console.log(\"company.js GetCompanyListByPage 错误\")\r\n            reject(error)\r\n          })\r\n        })\r\n    },\r\n\r\n    GetCompanyListTotalPage({commit}){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        getCompanyListTotalPage().then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"company.js GetCompanyListTotalPage 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    SearchCompanyList({commit},searchInfo){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        searchCompanyList(searchInfo).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"company.js SearchCompanyList 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    SearchCompanyListTotalPage({commit},searchInfo){\r\n      return new Promise((resolve, reject) => { //封装一个 Promise\r\n        searchCompanyListTotalPage(searchInfo).then(response => { //使用 permission 接口进行网络请求\r\n          resolve(response) //将结果封装进 Promise\r\n        }).catch(error => {\r\n          console.log(\"company.js SearchCompanyListTotalPage 错误\")\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n  }\r\n}\r\n\r\nexport default company\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}